<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>EncryptedSharedPreferences on 냉동코더의 기술블로그</title>
    <link>https://cliearl.github.io/tags/encryptedsharedpreferences/</link>
    <description>Recent content in EncryptedSharedPreferences on 냉동코더의 기술블로그</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 26 Feb 2022 13:39:27 +0900</lastBuildDate><atom:link href="https://cliearl.github.io/tags/encryptedsharedpreferences/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>EncryptedSharedPreferences로 데이터 암호화하기</title>
      <link>https://cliearl.github.io/posts/android/encrypted-sharedpreferences/</link>
      <pubDate>Sat, 26 Feb 2022 13:39:27 +0900</pubDate>
      
      <guid>https://cliearl.github.io/posts/android/encrypted-sharedpreferences/</guid>
      <description>이번 포스팅에서는 SharedPreference의 암호화에 대해 알아보도록 하겠습니다.
SharedPreferences의 저장방식 SharedPreference에 대해서는 SharedPreferences로 앱 설정값 저장하고 불러오기에서 설명했던 적이 있습니다. 소규모의 데이터를 앱 안에 XML 파일로 간편하게 저장할 수 있는 저장소인데요, XML 파일은 앱 안의 다음 경로에 만들어지게 됩니다.
1  /data/data/{package_name}/shared_prefs/{filename}.xml   Android Studio의 Device File Explorer를 사용하면 지정한 위치에 파일이 생성되어 있는것을 알 수 있고 열어서 내용을 볼 수도 있습니다. 지난 강의에서 만들었던 xml의 내용은 다음과 같이 되어 있네요.</description>
    </item>
    
  </channel>
</rss>
