<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>swipe on 냉동코더의 기술블로그</title>
    <link>https://cliearl.github.io/tags/swipe/</link>
    <description>Recent content in swipe on 냉동코더의 기술블로그</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 18 Apr 2021 22:40:04 +0900</lastBuildDate><atom:link href="https://cliearl.github.io/tags/swipe/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>RecyclerView를 Swipe, Drag, Touch하기</title>
      <link>https://cliearl.github.io/posts/android/recyclerview-touch/</link>
      <pubDate>Sun, 18 Apr 2021 22:40:04 +0900</pubDate>
      
      <guid>https://cliearl.github.io/posts/android/recyclerview-touch/</guid>
      <description>이번 포스팅에서는 RecyclerView에 Swipe, Drag, Touch 동작을 연결하는 법에 대해 알아보도록 하겠습니다.
이번에 만들어볼 앱에서는 ViewHolder를 스와이프하면 삭제가 되고, 잡고 끌면 위아래로 ViewHolder를 이동할 수 있으며, ViewHolder를 터치하면 그 내용이 변하는 동작을 수행하도록 하겠습니다.
여기서는 제가 RecyclerView에 View Binding 적용하기 강의에서 만들었던 Recyclerview 앱을 수정하는 방식으로 구현해보겠습니다.
리팩토링 우선 View Binding을 사용하도록 설정을 추가합니다.
1 2 3  android { buildFeatures.viewBinding true }   메인액티비티에서 만들어주던 dataSet은 초기화시 데이터를 바로 입력하도록 하고 Recyclerview 어댑터 안쪽으로 이동시켜서 받아오는 파라미터를 삭제합니다.</description>
    </item>
    
    <item>
      <title>ViewPager를 써서 좌우로 스와이프되는 화면 만들기</title>
      <link>https://cliearl.github.io/posts/android/viewpager-swipe/</link>
      <pubDate>Sat, 17 Apr 2021 18:38:46 +0900</pubDate>
      
      <guid>https://cliearl.github.io/posts/android/viewpager-swipe/</guid>
      <description>이번 포스팅에서는 ViewPager를 써서 화면을 좌우로 스와이프할 수 있는 앱을 만들어 보겠습니다.
ViewPager는 페이지를 만들어놓고 유저가 좌우로 스와이프 함으로써 각 페이지를 전환할 수 있게 하는 모듈입니다. 예를들어 페이지 1,2,3을 준비하고 이 페이지들을 ViewPager 어댑터에 전달합니다. 어댑터는 페이지를 순서대로 배열하고 페이지 2를 표시합니다. 페이지 1과 3은 화면 바깥의 좌우로 배치한 뒤 스와이프를 하면 현재 페이지를 밀어내고 화면 밖에서 대기하는 페이지가 ViewPager 화면으로 들어오게 됩니다.
화면 구성 우선은 화면을 구성하겠습니다. 화면에는 현재 어떤 페이지인지를 보여주는 인디케이터를 설치하고 나머지 영역을 ViewPager로 지정합니다.</description>
    </item>
    
  </channel>
</rss>
