<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Scrcpy on 냉동코더의 기술블로그</title>
        <link>https://cliearl.github.io/tags/scrcpy/</link>
        <description>Recent content in Scrcpy on 냉동코더의 기술블로그</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en</language>
        <lastBuildDate>Mon, 27 Mar 2023 16:05:18 +0900</lastBuildDate><atom:link href="https://cliearl.github.io/tags/scrcpy/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Scrcpy Mirroring</title>
        <link>https://cliearl.github.io/posts/android/scrcpy-mirroring/</link>
        <pubDate>Mon, 27 Mar 2023 16:05:18 +0900</pubDate>
        
        <guid>https://cliearl.github.io/posts/android/scrcpy-mirroring/</guid>
        <description>&lt;p&gt;이번 포스팅에서는 단말의 화면을 미러링하는 방법에 대해 알아보도록 하겠습니다.&lt;/p&gt;
&lt;h2 id=&#34;scrcpy&#34;&gt;scrcpy
&lt;/h2&gt;&lt;p&gt;안드로이드 스튜디오의 에뮬레이터는 &lt;a class=&#34;link&#34; href=&#34;https://github.com/intel/haxm&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;HAXM&lt;/a&gt;이라는 기술을 써서 처리속도를 올릴 수 있지만 작업 환경에 따라서는 HAXM을 사용할 수 없을 수도 있고 또 HAXM이 적용되었다고 해도 에뮬레이터의 특성상 실제 단말보다는 처리속도가 느릴 수 밖에 없기 때문에 개발에는 실제 단말을 사용하는 경우가 많습니다.&lt;/p&gt;
&lt;p&gt;그런데 실제 단말을 사용하더라도 에뮬레이터처럼 모니터 화면에서 단말화면을 보면서 조작하고 싶은 경우가 있을 수 있는데 그런 경우에 사용할 수 있는 솔루션 중 하나가 &lt;a class=&#34;link&#34; href=&#34;https://github.com/Genymobile/scrcpy&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;scrcpy&lt;/a&gt;입니다. 안드로이드 스튜디오의 에뮬레이터를 구동하지 않기 때문에 컴퓨터 파워를 절약할 수 있다는 이점이 있습니다.&lt;/p&gt;
&lt;p&gt;scrcpy는 &lt;a class=&#34;link&#34; href=&#34;https://developer.android.com/studio/command-line/adb&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;adb&lt;/a&gt;를 통해 단말 화면을 미러링하는 것 뿐만 아니라 마우스나 키보드 조작도 지원하기 때문에 기기를 원격 제어 할 수도 있습니다.&lt;/p&gt;
&lt;p&gt;홈페이지에서 설명하는 scrcpy의 특징은 다음과 같습니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;lightness: native, displays only the device screen&lt;/li&gt;
&lt;li&gt;performance: 30~120fps, depending on the device&lt;/li&gt;
&lt;li&gt;quality: 1920×1080 or above&lt;/li&gt;
&lt;li&gt;low latency: 35~70ms&lt;/li&gt;
&lt;li&gt;low startup time: ~1 second to display the first image&lt;/li&gt;
&lt;li&gt;non-intrusiveness: nothing is left installed on the Android device&lt;/li&gt;
&lt;li&gt;user benefits: no account, no ads, no internet required&lt;/li&gt;
&lt;li&gt;freedom: free and open source software&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;셋업&#34;&gt;셋업
&lt;/h2&gt;&lt;p&gt;Windows, macOS, Linux 환경에서 사용할 수 있으며 &lt;a class=&#34;link&#34; href=&#34;https://github.com/Genymobile/scrcpy/releases&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;릴리즈 페이지&lt;/a&gt;에서 파일을 다운받거나 &lt;code&gt;brew&lt;/code&gt; 혹은 &lt;code&gt;apt&lt;/code&gt; 명령으로 설치하면 됩니다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;brew install scrcpy
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;adb를 사용해야 하니 당연히 adb가 설치되어 있어야 하는데 안드로이드 스튜디오를 설치했다면 신경쓰지 않아도 됩니다. 만약 설치되어 있지 않다면 다음 명령으로 adb를 설치해 줍니다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;brew install android-platform-tools
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;그리고 &lt;a class=&#34;link&#34; href=&#34;https://developer.android.com/studio/command-line/adb.html#Enabling&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Enable adb debugging on your device&lt;/a&gt; 문서를 참고해 단말에서 USB 디버깅을 활성화 시켜주어야 합니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Android 4.2 이상 버전에서는 개발자 옵션 화면이 기본적으로 숨겨져 있습니다. 이 옵션을 표시하려면 Settings &amp;gt; About phone으로 이동하여 Build number를 일곱 번 탭합니다. 이전 화면으로 돌아가 하단에서 Developer options를 찾습니다.&lt;/p&gt;
&lt;p&gt;일부 기기에서는 개발자 옵션 화면의 위치나 이름이 다를 수도 있습니다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;준비가 완료되었다면 터미널에서 scrcpy를 실행시켜 줍니다. usb로 연결했을 때는 &lt;code&gt;-d&lt;/code&gt;, TCP/IP로 연결했을 땐 &lt;code&gt;-e&lt;/code&gt; 옵션을 붙여주면 됩니다. 저는 adb로 wifi연결을 한 뒤 &lt;code&gt;-e&lt;/code&gt; 옵션으로 구동하는데요, 이렇게 하면 무선으로 실기기 화면을 미러링 할 수 있어 개발할 때 편리합니다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;scrcpy -e
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;참고로 &lt;a class=&#34;link&#34; href=&#34;https://github.com/kaleidot725/ScrcpyHub&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;ScrcpyHub&lt;/a&gt;를 사용하면 scrcpy를 GUI로 사용할 수도 있습니다.
&lt;img src=&#34;https://camo.qiitausercontent.com/d08cb7501ab6eda417de3247aecbaae0bf0ac8b8/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f37393338372f37353137356132622d323965362d636336392d353361642d3766666661656166636464662e676966&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
