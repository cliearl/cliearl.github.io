<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Jazzy on 냉동코더의 기술블로그</title>
        <link>https://cliearl.github.io/tags/jazzy/</link>
        <description>Recent content in Jazzy on 냉동코더의 기술블로그</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en</language>
        <lastBuildDate>Thu, 09 May 2019 20:06:14 +0900</lastBuildDate><atom:link href="https://cliearl.github.io/tags/jazzy/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Jazzy를 이용한 코드 문서화</title>
        <link>https://cliearl.github.io/posts/ios/documentation-using-jazzy/</link>
        <pubDate>Thu, 09 May 2019 20:06:14 +0900</pubDate>
        
        <guid>https://cliearl.github.io/posts/ios/documentation-using-jazzy/</guid>
        <description>&lt;h2 id=&#34;swift-코딩규약&#34;&gt;Swift 코딩규약&lt;/h2&gt;
&lt;p&gt;Swift 코드를 작성할 때는 코딩규약에 따라 작성하는게 추천되는데, 여러 조직에서 이 규약을 제공하고 있다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;스위프트 공식 홈페이지의 &lt;a class=&#34;link&#34; href=&#34;http://swift.org/documentation/api-design-guidelines/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;API Design Guidelines&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;raywenderlich.com 의 &lt;a class=&#34;link&#34; href=&#34;http://github.com/raywenderlich/swift-style-guide&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;The Official raywenderlich.com Swift Style Guide&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The Official raywenderlich.com Swift Style Guide는 한국어로도 &lt;a class=&#34;link&#34; href=&#34;http://kka7.tistory.com/59&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;번역&lt;/a&gt;되어 있다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;http://google.github.io/swift/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Google Swift Style Guide&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;일본의 IT 교육회사에서 사용하는 규약 &lt;a class=&#34;link&#34; href=&#34;https://qiita.com/ShinokiRyosei/items/916e658fda6d6862c706&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Swiftコーディング規約@Life is Tech !&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Github에서도 &lt;a class=&#34;link&#34; href=&#34;http://github.com/github/swift-style-guide&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Github guide to Swift style and conventions&lt;/a&gt;를 제공하고 있었으나 2017년 11월 시점으로 업뎃을 중단했다.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;lint-사용&#34;&gt;Lint 사용&lt;/h2&gt;
&lt;p&gt;규약을 항상 외우고 있을수는 없기 때문에 Lint 플러그인을 사용하여 자동으로 문법오류를 잡도록 하는것이 편리하다. &lt;a class=&#34;link&#34; href=&#34;https://github.com/realm/SwiftLint&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;SwiftLint&lt;/a&gt;라는  도구가 그 역할을 할 수 있다.&lt;/p&gt;
&lt;p&gt;SwiftLint의 사용법에 대해서는 &lt;a class=&#34;link&#34; href=&#34;https://academy.realm.io/kr/posts/slug-jp-simard-swiftlint/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;SwiftLint로 보다 명확하고 깔끔한 코드를 만들어 보세요!&lt;/a&gt;를 참고하도록 하자.&lt;/p&gt;
&lt;p&gt;SwiftLint의 실제 사용법은 갓제드님의 &lt;a class=&#34;link&#34; href=&#34;http://zeddios.tistory.com/447&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;iOS ) 내 프로젝트에 SwiftLint를 적용해보자&lt;/a&gt;를 참고하도록 하자.&lt;/p&gt;
&lt;h2 id=&#34;jazzy로-코드-문서화하기&#34;&gt;Jazzy로 코드 문서화하기&lt;/h2&gt;
&lt;p&gt;코드를 깔끔하게 작성했다면 코드를 자동으로 문서화 하는 툴인 &lt;a class=&#34;link&#34; href=&#34;http://github.com/realm/jazzy&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Jazzy&lt;/a&gt;를 사용할 수 있다.&lt;/p&gt;
&lt;p&gt;realm.io에서 개발한 jazzy를 사용하면 Xcode에서 Markdown 스타일로 작성한 코드를 문서화해준다. 포맷에 대해서는 &lt;a class=&#34;link&#34; href=&#34;http://www.appcoda.com/swift-markdown/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Documenting Your Swift Code in Xcode Using Markdown&lt;/a&gt; 이나, &lt;a class=&#34;link&#34; href=&#34;http://nshipster.com/swift-documentation/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Swift Documentation&lt;/a&gt;을 참고하자.&lt;/p&gt;
&lt;p&gt;한글로 된 Jazzy의 사용법에 대해서는 &lt;a class=&#34;link&#34; href=&#34;https://bitboylabs.wordpress.com/2016/10/18/jazzy-xcode%EC%97%90%EC%84%9C-jazzy%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%B4%EC%84%9C-%EC%95%A0%ED%94%8C-%EB%9E%98%ED%8D%BC%EB%9F%B0%EC%8A%A4-%EB%AC%B8%EC%84%9C-%EC%8A%A4%ED%83%80%EC%9D%BC%EC%9D%98-api/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Xcode에서 Jazzy를 이용해서 애플 래퍼런스 문서 스타일의 API문서 만들기&lt;/a&gt;를 참고하자. 가장 최신의 Jazzy 사용법은 &lt;a class=&#34;link&#34; href=&#34;https://medium.com/@jonathan2457/generate-host-your-ios-documentation-39e21b382ce8&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Generate &amp;amp; Host your iOS Documentation&lt;/a&gt;,  &lt;a class=&#34;link&#34; href=&#34;http://qiita.com/uhooi/items/d900c2de03e9d9f39b95&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Swift用ドキュメント生成ツール「Jazzy」のセットアップ&amp;amp;操作方法&lt;/a&gt;에서 확인할 수 있다.&lt;/p&gt;
&lt;h2 id=&#34;jazzy-사용&#34;&gt;jazzy 사용&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;gem update --system&lt;/code&gt;으로 gem 최신화&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gem install jazzy&lt;/code&gt; 로 설치&lt;/li&gt;
&lt;li&gt;인스톨중 &lt;code&gt;(Errno::EPERM) Operation not permitted&lt;/code&gt; 에러가 발생할 수 있는데, rootless라는 OSX의 시스템요소때문에 발생한다고 하니 &lt;a class=&#34;link&#34; href=&#34;https://stackoverflow.com/questions/32891965/error-while-executing-gem-errnoeperm-operation-not-permitted&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;stackoverflow&lt;/a&gt;를 참고하여 해결하자.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo gem install -n /usr/local/bin jazzy&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;빌드가 가능한 xcode 디렉토리에서 &lt;code&gt;jazzy --clean --min-acl private&lt;/code&gt;를 실행하면 문서가 생성된다.&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        
    </channel>
</rss>
