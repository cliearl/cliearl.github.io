<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ProgressBar on 냉동코더의 기술블로그</title>
    <link>https://cliearl.github.io/tags/progressbar/</link>
    <description>Recent content in ProgressBar on 냉동코더의 기술블로그</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 25 Apr 2021 15:35:18 +0900</lastBuildDate><atom:link href="https://cliearl.github.io/tags/progressbar/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ProgressBar로 AsyncTask 이해하기</title>
      <link>https://cliearl.github.io/posts/android/progressbar-asynctask/</link>
      <pubDate>Sun, 25 Apr 2021 15:35:18 +0900</pubDate>
      
      <guid>https://cliearl.github.io/posts/android/progressbar-asynctask/</guid>
      <description>이번 포스팅에서는 ProgressBar와 AsyncTask의 사용방법에 대해 알아보도록 하겠습니다.
들어가기 ProgressBar는 안드로이드가 어떤 작업을 진행할때 그 작업의 진행상황을 보여주는 모듈입니다. 시간이 걸리는 처리가 필요할 때 표시해주면 기다리는 유저의 거부감을 줄일 수 있습니다. 이 기능은 기존에는 ProgressDialog를 이용해서 구현했는데 다이얼로그가 표시될 때 유저의 조작을 제한한다는 문제가 있어 deprecated 되고 ProgressBar로 대체되는 추세입니다.
메인 스레드의 관점에서 보면 ProgressBar는 처리에 긴 시간이 걸리기 때문에 메인 스레드와는 별개의 스레드에서 처리를 수행해야 할 필요가 있습니다. 별개의 스레드에서 처리를 수행하는데는 여러가지 방법이 있을 수 있는데 여기서는 AsyncTask 클래스를 이용해서 ProgressBar를 구현해 보도록 하겠습니다.</description>
    </item>
    
  </channel>
</rss>
