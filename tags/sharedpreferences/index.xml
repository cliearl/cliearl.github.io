<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SharedPreferences on 냉동코더의 기술블로그</title>
    <link>https://cliearl.github.io/tags/sharedpreferences/</link>
    <description>Recent content in SharedPreferences on 냉동코더의 기술블로그</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 22 Apr 2021 20:33:39 +0900</lastBuildDate><atom:link href="https://cliearl.github.io/tags/sharedpreferences/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>SharedPreferences를 json 포맷으로 관리하기</title>
      <link>https://cliearl.github.io/posts/android/sharedpreferneces-gson/</link>
      <pubDate>Thu, 22 Apr 2021 20:33:39 +0900</pubDate>
      
      <guid>https://cliearl.github.io/posts/android/sharedpreferneces-gson/</guid>
      <description>이번 포스팅에서는 SharedPreferences에 복잡한 형태의 데이터를 json 포맷으로 저장하고 불러오는 법에 대해 알아보도록 하겠습니다.
SharedPreferences는 Key-Value 형태로 이루어진 딕셔너리를 저장하도록 설계된 저장장소인데요, 이 Value 부분에 json으로 구성된 긴 형태의 데이터를 저장함으로써 복잡한 형태의 데이터도 저장할 수가 있습니다.
이 때 앱 안의 데이터를 json으로 Serialize하고 다시 복원하는 Deserialize를 편하게 실행하게 해 주는 Gson이라는 라이브러리가 있습니다. 이번 포스팅에서는 이 라이브러리를 활용하겠습니다.
포스팅에서는 Data class 이해하고 RecyclerView에서 사용하기 강의에서 만들었던 RecyclerView 프로젝트를 수정하면서 구현해보겠습니다.</description>
    </item>
    
    <item>
      <title>SharedPreferences로 앱 설정값 저장하고 불러오기</title>
      <link>https://cliearl.github.io/posts/android/sharedpreferences-basic/</link>
      <pubDate>Tue, 20 Apr 2021 21:35:43 +0900</pubDate>
      
      <guid>https://cliearl.github.io/posts/android/sharedpreferences-basic/</guid>
      <description>이번 포스팅에서는 SharedPreferences를 사용하는 법에 대해 알아보도록 하겠습니다.
데이터를 앱에 저장하는 방법 데이터를 앱에 저장하는 방법에는 크게 세가지가 있습니다.
 파일 I/O (내부 또는 외부 저장소)  접근 권한을 획득하고 파일을 열었다 닫았다 하는 수고가 필요함   관계형 데이터베이스  SQLite 등을 이용해 복잡한 관계형 데이터를 저장할 수 있음 간단한 데이터를 저장할거라면 구축과 관리에 많은 시간과 노려이 요구됨   SharedPreference  Key/Value 형태로 이용함 내부적으로는 XML 파일로 저장됨 파일을 열고 닫을 필요 없이 핸들러를 만들어서 간편하게 사용가능함    SharedPreferences는 보통 복잡한 데이터를 기록하기보다는, 게임의 환경설정이라든지 그런 단순한 내용을 저장하는데 적절한 저장공간이라고 생각하면 됩니다.</description>
    </item>
    
  </channel>
</rss>
