<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>python on Home</title>
    <link>https://cliearl.github.io/tags/python/</link>
    <description>Recent content in python on Home</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko</language>
    <copyright>&amp;copy;{year}, All Rights Reserved</copyright>
    <lastBuildDate>Sun, 13 Dec 2020 15:37:00 +0900</lastBuildDate>
    <sy:updatePeriod>daily</sy:updatePeriod>
    
        <atom:link href="https://cliearl.github.io/tags/python/index.xml" rel="self" type="application/rss+xml" />
    

      
      <item>
        <title>VSCODE에서 Python VirtualEnv 환경설정하기</title>
        <link>https://cliearl.github.io/posts/etc/python-virtualenv-settings/</link>
        <pubDate>Sun, 13 Dec 2020 15:37:00 +0900</pubDate>
        
        <atom:modified>Sun, 13 Dec 2020 15:37:00 +0900</atom:modified>
        <guid>https://cliearl.github.io/posts/etc/python-virtualenv-settings/</guid>
        <description>&lt;p&gt;윈도우 환경에서 VS Code에 파이썬 가상환경 설정하고 사용하는 법에 대해 정리했다.&lt;/p&gt;</description>
        <content:encoded>&lt;p&gt;윈도우 환경에서 VS Code에 파이썬 가상환경 설정하고 사용하는 법에 대해 정리했다.&lt;/p&gt;
&lt;h2 id=&#34;venv-환경-작성&#34;&gt;venv 환경 작성&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;작업폴더를 연 뒤 터미널에서 다음 값 입력&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ python3 -m venv .venv
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;상태표시줄의 파이썬을 눌러 (&#39;.venv&#39;)인 python을 선택&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;다음 명령어로 가상환경을 활성화 후 패키지 설치&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div id=&#34;f3a9b3a304650797&#34; class=&#34;codetab&#34;&gt;
  &lt;div class=&#34;codetab__links&#34;&gt;
    
      &lt;button class=&#34;codetab__link&#34; aria-label=&#34;Tab link&#34;&gt;윈도우&lt;/button&gt;
    
      &lt;button class=&#34;codetab__link&#34; aria-label=&#34;Tab link&#34;&gt;macOS&lt;/button&gt;
    
  &lt;/div&gt;
  
  
&lt;div id=&#34;9cbd968e7073faa6&#34; class=&#34;codetab__content&#34;&gt;
  &lt;pre&gt;&lt;code class=&#34;language-윈도우&#34; data-lang=&#34;윈도우&#34;&gt;.venv\\scripts\\activate
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

  
&lt;div id=&#34;b5ef03d337930b6e&#34; class=&#34;codetab__content&#34;&gt;
  &lt;pre&gt;&lt;code class=&#34;language-macOS&#34; data-lang=&#34;macOS&#34;&gt;source .venv/bin/activate
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;script&gt;
  &#39;use strict&#39;;

  var containerId = JSON.parse(&#34;\&#34;f3a9b3a304650797\&#34;&#34;);
  var containerElem = document.getElementById(containerId);
  var codetabLinks = null;
  var codetabContents = null;
  var ids = [];

  if (containerElem) {
    codetabLinks = containerElem.querySelectorAll(&#39;.codetab__link&#39;);
    codetabContents = containerElem.querySelectorAll(&#39;.codetab__content&#39;);
  }

  for (var i = 0; i &lt; codetabContents.length; i++) {
    ids = ids.concat(codetabContents[i].getAttribute(&#39;id&#39;));
    codetabContents[i].style.display = &#39;none&#39;;

    if (0 === parseInt(i, 10) &amp;&amp; !codetabContents[i].classList.contains(&#39;active&#39;)) {
      codetabContents[i].classList.add(&#39;active&#39;);
    }
  }

  for (var i = 0; i &lt; codetabLinks.length; i++) {
    codetabLinks[i].setAttribute(&#39;id&#39;, ids[i]);

    if (0 === parseInt(i, 10) &amp;&amp; !codetabLinks[i].classList.contains(&#39;active&#39;)) {
      codetabLinks[i].classList.add(&#39;active&#39;);
    } else {
      codetabLinks[i].classList.remove(&#39;active&#39;);
    }
  }

  if (codetabContents.length &gt; 0) {
    codetabContents[0].style.display = &#39;block&#39;;
  }
&lt;/script&gt;
&lt;h2 id=&#34;code-runner를-실행하기-위한-settingsjson-설정&#34;&gt;code-runner를 실행하기 위한 settings.json 설정&lt;/h2&gt;

&lt;div id=&#34;a08a452ff5480719&#34; class=&#34;codetab&#34;&gt;
  &lt;div class=&#34;codetab__links&#34;&gt;
    
      &lt;button class=&#34;codetab__link&#34; aria-label=&#34;Tab link&#34;&gt;윈도우&lt;/button&gt;
    
      &lt;button class=&#34;codetab__link&#34; aria-label=&#34;Tab link&#34;&gt;macOS&lt;/button&gt;
    
  &lt;/div&gt;
  
  
&lt;div id=&#34;b3ce59c4d122b40d&#34; class=&#34;codetab__content&#34;&gt;
  &lt;pre&gt;&lt;code class=&#34;language-윈도우&#34; data-lang=&#34;윈도우&#34;&gt;  &amp;quot;python.pythonPath&amp;quot;: &amp;quot;blahblah\\.venv\\Script\\python.exe&amp;quot;,
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

  
&lt;div id=&#34;71e90d5f5a253afd&#34; class=&#34;codetab__content&#34;&gt;
  &lt;pre&gt;&lt;code class=&#34;language-macOS&#34; data-lang=&#34;macOS&#34;&gt;  &amp;quot;python.pythonPath&amp;quot;: &amp;quot;.venv/bin/python&amp;quot;,
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;script&gt;
  &#39;use strict&#39;;

  var containerId = JSON.parse(&#34;\&#34;a08a452ff5480719\&#34;&#34;);
  var containerElem = document.getElementById(containerId);
  var codetabLinks = null;
  var codetabContents = null;
  var ids = [];

  if (containerElem) {
    codetabLinks = containerElem.querySelectorAll(&#39;.codetab__link&#39;);
    codetabContents = containerElem.querySelectorAll(&#39;.codetab__content&#39;);
  }

  for (var i = 0; i &lt; codetabContents.length; i++) {
    ids = ids.concat(codetabContents[i].getAttribute(&#39;id&#39;));
    codetabContents[i].style.display = &#39;none&#39;;

    if (0 === parseInt(i, 10) &amp;&amp; !codetabContents[i].classList.contains(&#39;active&#39;)) {
      codetabContents[i].classList.add(&#39;active&#39;);
    }
  }

  for (var i = 0; i &lt; codetabLinks.length; i++) {
    codetabLinks[i].setAttribute(&#39;id&#39;, ids[i]);

    if (0 === parseInt(i, 10) &amp;&amp; !codetabLinks[i].classList.contains(&#39;active&#39;)) {
      codetabLinks[i].classList.add(&#39;active&#39;);
    } else {
      codetabLinks[i].classList.remove(&#39;active&#39;);
    }
  }

  if (codetabContents.length &gt; 0) {
    codetabContents[0].style.display = &#39;block&#39;;
  }
&lt;/script&gt;</content:encoded>
        <dc:creator>냉동코더</dc:creator>
        
        
        
        
          
            
              <category>python</category>
            
          
            
              <category>virtualenv</category>
            
          
        
        
          
            
              <category>etc</category>
            
          
        
        
      </item>
      

    
  </channel>
</rss>