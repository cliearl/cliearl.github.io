[{"content":"내가 사용하는 파이어폭스 플러그인을 정리해 보았다.\nAuto Tab Discard https://addons.mozilla.org/ko/firefox/addon/auto-tab-discard/\n 안보고 있는 탭을 자동으로 정리해서 메모리 사용량을 줄여줌  Bitwarden https://addons.mozilla.org/ko/firefox/addon/bitwarden-password-manager/\n 패스워드 매니저  Dark Reader https://addons.mozilla.org/ko/firefox/addon/darkreader/\n 모든 웹사이트에 다크모드를 적용하여 어둡게 보이도록 함  Download Filename Encoding https://addons.mozilla.org/ko/firefox/addon/download-filename-encoding/\n 다운로드하는 파일명이 언어 인코딩 때문에 깨지는 것을 방지  Download Manager (S3) https://addons.mozilla.org/ko/firefox/addon/s3download-statusbar/\n 다운로드 진행상황을 상태표시줄에 표시해줌  DownThemAll! https://addons.mozilla.org/ko/firefox/addon/downthemall/\n 대량의 파일을 다운로드해주는 관리자  Enhancer for YouTube https://addons.mozilla.org/ko/firefox/addon/enhancer-for-youtube/\n 유튜브 영상의 반복, 고정등 여러가지 기능을 추가해 줌  Flagfox https://addons.mozilla.org/ko/firefox/addon/flagfox/\n 현재 접속중인 서버의 위치를 국기로 표시해 줌  Gesturefy https://addons.mozilla.org/ko/firefox/addon/gesturefy/\n 마우스 제스처로 브라우저를 조작할 수 있게 함  Google search link fix https://addons.mozilla.org/ko/firefox/addon/google-search-link-fix/\n 구글을 통해 검색한 사이트의 링크를 복사할 때 구글 리퍼러가 붙는것을 막아줌  Happy Right-Click https://addons.mozilla.org/ko/firefox/addon/%E5%BF%AB%E4%B9%90%E5%8F%B3%E9%94%AE/\n 마우스 오른쪽 버튼이 막혀있는 사이트를 풀어줌  Imagus https://addons.mozilla.org/ko/firefox/addon/imagus/\n 이미지나 동영상에 커서를 갖다 대었을 때 호버링으로 크게 보여줌  ImTranslator https://addons.mozilla.org/ko/firefox/addon/imtranslator/\n 팝업 형태로 번역기를 사용할 수 있게 해줌  Open With https://addons.mozilla.org/ko/firefox/addon/open-with/\n 현재 보고있는 웹페이지를 다른 브라우저로 띄워줌  Print Edit WE https://addons.mozilla.org/ko/firefox/addon/print-edit-we/\n 웹 페이지에서 자신이 원하는 부분만 잘라내서 프린트하도록 도와줌  Quick Dial https://addons.mozilla.org/ko/firefox/addon/quick-dial/\n 시작 페이지에 자주가는 웹사이트를 버튼형태로 표시해 줌  Top and Bottom scroll buttons https://addons.mozilla.org/ko/firefox/addon/top-and-bottom-scroll-buttons/\n 사이트의 맨 위 / 맨 아래로 이동하는 버튼을 표시  uBlock Origin https://addons.mozilla.org/ko/firefox/addon/ublock-origin/\n 자원을 덜 먹는다고 선전하는 광고차단기  Undo Close Tab https://addons.mozilla.org/ko/firefox/addon/undoclosetabbutton/\n 최근에 닫은 탭을 다시 여는 버튼을 표시  View Image https://addons.mozilla.org/ko/firefox/addon/view-image/\n 구글에서 이미지를 검색할 때 이미지 보기 버튼을 추가함  Wappalyzer https://addons.mozilla.org/ko/firefox/addon/wappalyzer/\n 현재 보는 중인 사이트애 적용된 웹 기술을 보여줌  weAutoPagerize https://addons.mozilla.org/ko/firefox/addon/weautopagerize/\n 현재 보고있는 페이지의 다음 페이지를 미리 읽어서 현재 페이지에 연결시켜줌  Zoom Page WE https://addons.mozilla.org/ko/firefox/addon/zoom-page-we/\n 페이지 줌을 편하게 할 수 있는 버튼을 추가함  Zotero Connector https://www.zotero.org/download/\n 서지정보 관리 프로그램인 Zotero와 브라우저를 연동시켜 줌 ","description":"","id":0,"section":"posts","tags":["firefox","plugin"],"title":"내가 사용하는 Firefox Plugin","uri":"http://cliearl.github.io/posts/firefox-plugin/"},{"content":"윈도우, Mac, 스마트폰에서 모두 사용할 수 있는 메모 앱을 찾아봤다. 마크다운 포맷을 사용할 수 있으면서 메모를 디렉토리로 관리할 수 있을 것이 조건이었다.\n스탠드얼론 앱 iOS 메모 앱 https://support.apple.com/ko-kr/HT205773\n아이폰을 사용하고 있기에 처음에는 아이폰의 메모 앱을 사용해 봤으나 별 기능도 없고 아이클라우드환경은 윈도우 환경에서 싱크할 수가 없다는 한계가 있었다.\nGoogle Keep https://apps.apple.com/us/app/google-keep-notes-and-lists/id1029207872\n구글 생태계에서 사용할 수 있는 메모 앱. 워드프로세서로 사용하는 느낌이 아닌 포스트잇 같은 느낌으로 사용한다. 개인적 용도와는 맞지않아서 패스함.\nSynology Note Station https://www.synology.com/en-us/dsm/feature/note_station\n시놀로지를 운영할 경우 사용할 수 있는 솔루션. 디렉토리 구성으로 되어있고 필기도 할 수 있는데 초기 로그인 화면이 크게 나타나는게 팬시하지 않고 데이터 싱크가 느리다.\njoplin https://github.com/laurent22/joplin\niOS, 안드로이드, 윈도우, Mac, 리눅스에서 사용할 수 있는 앱을 제공하며 DB는 webdav로 싱크할 수 있다. 메모는 디렉토리로 관리할 수 있다. 오픈소스로 활발하게 업데이트가 이루어진다. 딱 하나 단점은 웹앱이 없어서 브라우저에서 접근이 안된다는 것.\n웹 앱 오픈소스이며 액티브하게 갱신되고 도커이미지가 있는 것을 기준으로 하여 실제로 써본 것들만을 소개한다.\nTrillium Notes https://github.com/zadam/trilium\n자바스크립트로 만들어진 앱. 마크다운 스크립트를 입력하면 실시간으로 화면에 반영되는 위지위그 방식. 메모를 디렉토리 기준으로 관리하며 글만이 아니라 관계도도 그릴 수 있고 암튼 사용할 수 있는 문서형태가 다양하다.\nBookStack https://github.com/BookStackApp/BookStack\nPHP와 라라벨로 만들어진 앱. 메모를 서고와 서가형태로 관리하는데 개인적으로는 이 부분이 직관적으로 느껴지지 않아서 적응하지 못했다.\nWiki.js https://github.com/Requarks/wiki\nNode.js로 만들어진 앱. 메모를 디렉토리 구조로 관리하며 퍼포먼스도 나쁘지 않아 현재 주력으로 사용중.\n","description":"","id":1,"section":"posts","tags":["google keep","synology","note station","note app","joplin","bookstack","wiki.js"],"title":"노트 앱 정착기","uri":"http://cliearl.github.io/posts/finding-note-app/"},{"content":"작업환경에서 사용하는 폰트에 대하여 정리해 보았다.\n텍스트 에디터용 폰트 메모장, 워드, 파워포인트, 한글 등에서 한국어, 영어, 일본어를 모두 표시할 수 있는 폰트가 필요하다.\nGoogle Noto Fonts   어도비와 구글이 합작하여 본고딕이라는 폰트를 출시했다. https://blog.typekit.com/alternate/source-han-sans-kor/\n  이 폰트는 구글에서 Noto Fonts라는 이름으로 풀었다.\n  다운로드 https://www.google.com/get/noto/help/cjk/\n  KoPubWorld  한국출판인회의에서 전자출판에 특화된 서체를 풀었다. 다운로드 http://www.kopus.org/Biz/electronic/Font.aspx  네이버 나눔폰트  네이버에서 나눔시리즈 폰트를 풀었다. 다운로드 https://hangeul.naver.com/2017/nanum  코딩용 폰트 코딩용 폰트에 요구되는 사항들\n 문자열을 스페이스단위로 일치시켜야 하므로 폰트가 고정폭(Monospaced)이어야 한다. 오인식하기 쉬운 알파벳, 특수문자에 대한 대책이 있어야 한다. 특수문자의 가독성을 높여준다고 하는 Ligature는 필수는 아니다. 한글이 깨끗하게 나오면 좋지만 영문체보다 중요하진 않다  개인적으로 괜찮다 생각하는 폰트 (알파벳순)  Consolas 마이크로소프트 개발. D2Coding 네이버 개발. 다닥다닥 붙어있는 느낌. 리가쳐 지원. Fira Code 리가쳐가 이쁘게 나옴. Hack 동글동글한 폰트. IBM Plex Mono IBM 개발. 정렬과 각을 강조. Inconsolata 동글하면서도 살짝 딱딱. Input Mono Inconsolata보다 폭이 약간 넓고 굵음. JetBrains Mono 젯브레인 개발. 아래위로 긴 느낌. 리가쳐 지원. Menlo 애플 개발. Myrica 일본어 코딩용. Source Code Pro 어도비 개발. 글씨폭이 넓고 아래위로 납작한 편. Ubuntu Mono 캐노니컬 개발.  폰트 확인 사이트  Programming Fonts Programming font comparison ","description":"","id":2,"section":"posts","tags":["font","google noto fonts","KoPubWorld","Naver Nanum font"],"title":"작업용 폰트 정보 정리","uri":"http://cliearl.github.io/posts/fonts-for-work/"},{"content":"내가 사용하는 VS Code의 settings.json 내용\n{ \u0026quot;files.autoSave\u0026quot;: \u0026quot;afterDelay\u0026quot;, \u0026quot;editor.fontSize\u0026quot;: 18, \u0026quot;editor.fontFamily\u0026quot;: \u0026quot;'Fira Code', 'Noto Sans CJK KR'\u0026quot;, \u0026quot;editor.fontLigatures\u0026quot;: false, \u0026quot;editor.renderWhitespace\u0026quot;: \u0026quot;boundary\u0026quot;, \u0026quot;editor.wordWrap\u0026quot;: \u0026quot;on\u0026quot;, \u0026quot;editor.wrappingIndent\u0026quot;: \u0026quot;indent\u0026quot;, \u0026quot;editor.rulers\u0026quot;: [ 100, 120 ], \u0026quot;editor.formatOnSave\u0026quot;: true, \u0026quot;git.autofetch\u0026quot;: true, \u0026quot;git.confirmSync\u0026quot;: false, \u0026quot;python.formatting.provider\u0026quot;: \u0026quot;black\u0026quot;, \u0026quot;python.languageServer\u0026quot;: \u0026quot;Microsoft\u0026quot;, \u0026quot;python.linting.pylintEnabled\u0026quot;: false, \u0026quot;python.linting.pylintPath\u0026quot;: \u0026quot;pylint\u0026quot;, \u0026quot;terminal.integrated.shell.windows\u0026quot;: \u0026quot;C:\\\\WINDOWS\\\\System32\\\\WindowsPowerShell\\\\v1.0\\\\powershell.exe\u0026quot;, \u0026quot;code-runner.runInTerminal\u0026quot;: true, \u0026quot;code-runner.executorMap\u0026quot;: { \u0026quot;javascript\u0026quot;: \u0026quot;node\u0026quot;, \u0026quot;php\u0026quot;: \u0026quot;php\u0026quot;, \u0026quot;python\u0026quot;: \u0026quot;$pythonPath -u $fullFileName\u0026quot;, \u0026quot;perl\u0026quot;: \u0026quot;perl\u0026quot;, \u0026quot;ruby\u0026quot;: \u0026quot;ruby\u0026quot;, \u0026quot;go\u0026quot;: \u0026quot;go run\u0026quot;, \u0026quot;html\u0026quot;: \u0026quot;\\\u0026quot;C:\\\\Program Files (x86)\\\\Google\\\\Chrome\\\\Application\\\\chrome.exe\\\u0026quot;\u0026quot;, \u0026quot;java\u0026quot;: \u0026quot;cd $dir \u0026amp;\u0026amp; javac $fileName \u0026amp;\u0026amp; java $fileNameWithoutExt\u0026quot;, \u0026quot;c\u0026quot;: \u0026quot;cd $dir \u0026amp;\u0026amp; gcc $fileName -o $fileNameWithoutExt \u0026amp;\u0026amp; $dir$fileNameWithoutExt\u0026quot;, \u0026quot;cpp\u0026quot;: \u0026quot;cd $dir \u0026amp;\u0026amp; g++ -std=c++14 $fileName -o $fileNameWithoutExt \u0026amp;\u0026amp; $dir$fileNameWithoutExt\u0026quot; }, } ","description":"","id":3,"section":"posts","tags":["VS Code","settings.json"],"title":"내가 사용하는 VS Code settings.json","uri":"http://cliearl.github.io/posts/vscode-settings-json/"},{"content":"윈도우 환경에서 VS Code에 파이썬 가상환경 설정하고 사용하는 법에 대해 정리했다.\nvenv 환경 작성  작업폴더를 연 뒤 터미널에서 다음 값 입력  $ python3 -m venv .venv   상태표시줄의 파이썬을 눌러 ('.venv')인 python을 선택\n  다음 명령어로 가상환경을 활성화 후 패키지 설치\n  // 윈도우 .venv\\\\scripts\\\\activate // macOS source .venv/bin/activate code-runner를 실행하기 위한 settings.json 설정 // 윈도우 { \u0026quot;python.pythonPath\u0026quot;: \u0026quot;blahblah\\\\.venv\\\\Script\\\\python.exe\u0026quot;, } // macOS { \u0026quot;python.pythonPath\u0026quot;: \u0026quot;.venv/bin/python\u0026quot;, } ","description":"","id":4,"section":"posts","tags":["python","virtualenv"],"title":"VSCODE에서 Python VirtualEnv 환경설정하기","uri":"http://cliearl.github.io/posts/python-virtualenv-settings/"},{"content":"시놀로지에서 도커 이미지를 업데이트하는 법에 대해 정리하였다.\n  도커패널 \u0026gt; 컨테이너 \u0026gt; 업데이트할 컨테이너 선택후 [작업 -\u0026gt; 중지]\n  도커패널 \u0026gt; 레지스트리 \u0026gt; 업데이트할 이미지 찾아서 [다운로드]\n(이전 다운로드 받은 이미지(image) 삭제 하지 않아도 됨)\n  도커패널 \u0026gt; 업데이트할 컨테이너 선택후 [작업 -\u0026gt; 지우기]\n(이전 설정은 지워지지 않음)\n  도커패널 \u0026gt; 업데이트할 컨테이너 선택후 [작업 -\u0026gt; 시작점]\n ","description":"","id":5,"section":"posts","tags":["synology","docker","update"],"title":"시놀로지 도커 이미지 업데이트하기","uri":"http://cliearl.github.io/posts/synology-docker-update/"},{"content":"내가 사용하는 VS Code의 extension에 대해 정리해보았다.\nActive File In StatusBar  현재 편집하고 있는 파일의 위치를 상태바에 표시.  C/C++  C/C++ 지원  Code Runner  코드 실행을 도와줌. settings.json에 다음 내용을 추가.  \u0026quot;code-runner.executorMap\u0026quot;: { \u0026quot;javascript\u0026quot;: \u0026quot;node\u0026quot;, \u0026quot;php\u0026quot;: \u0026quot;php\u0026quot;, \u0026quot;python\u0026quot;: \u0026quot;$pythonPath -u $fullFileName\u0026quot;, \u0026quot;perl\u0026quot;: \u0026quot;perl\u0026quot;, \u0026quot;ruby\u0026quot;: \u0026quot;ruby\u0026quot;, \u0026quot;go\u0026quot;: \u0026quot;go run\u0026quot;, \u0026quot;html\u0026quot;: \u0026quot;\\\u0026quot;C:\\\\Program Files (x86)\\\\Google\\\\Chrome\\\\Application\\\\chrome.exe\\\u0026quot;\u0026quot;, \u0026quot;java\u0026quot;: \u0026quot;cd $dir \u0026amp;\u0026amp; javac $fileName \u0026amp;\u0026amp; java $fileNameWithoutExt\u0026quot;, \u0026quot;c\u0026quot;: \u0026quot;cd $dir \u0026amp;\u0026amp; gcc $fileName -o $fileNameWithoutExt \u0026amp;\u0026amp; $dir$fileNameWithoutExt\u0026quot;, \u0026quot;cpp\u0026quot;: \u0026quot;cd $dir \u0026amp;\u0026amp; g++ -std=c++14 $fileName -o $fileNameWithoutExt \u0026amp;\u0026amp; $dir$fileNameWithoutExt\u0026quot; }, CodeMap  탐색창에 파일 속 클래스나 함수구조를 보여줌  Excel Viewer  View Excel spreadsheets and CSV files within Visual Studio Code workspaces.  Git Graph  View a Git Graph of your repository, and perform Git actions from the graph.  indent-rainbow  This extension colorizes the indentation in front of your text alternating four different colors on each step. Some may find it helpful in writing code for Nim or Python.  Kotlin Language  Kotlin language support for VS Code  LaTeX Workshop  Boost LaTeX typesetting efficiency with preview, compile, autocomplete, colorize, and more.  Maintained Swift Development Environment  New home of Swift Development Environment for VS Code  Markdown All in One  All you need to write Markdown (keyboard shortcuts, table of contents, auto preview and more)  PlantUML  Rich PlantUML support for Visual Studio Code.  Path Autocomplete  Provides path completion for visual studio code.  Python  A Visual Studio Code extension with rich support for the Python language (for all actively supported versions of the language: 2.7, \u0026gt;=3.4), including features such as linting, debugging, IntelliSense, code navigation, code formatting, refactoring, unit tests, snippets, and more!  Settings Sync  Synchronize Settings, Snippets, Themes, File Icons, Launch, Keybindings, Workspaces and Extensions Across Multiple Machines Using GitHub Gist.  Todo Tree  Show TODO, FIXME, etc. comment tags in a tree view  Visual Studio IntelliCode  AI-assisted development  vscode-icons  Icons for Visual Studio Code ","description":"","id":6,"section":"posts","tags":["VS Code","extension","plugin"],"title":"내가 사용하는 VS Code Extensions","uri":"http://cliearl.github.io/posts/vscode-extensions/"},{"content":"도커로 Hexo 블로그를 만들고 github.io 주소로 접속하도록 해 보았다.\n개인적으로 사용하고 있는 텍큐 블로그가 있는데 기술관련 내용을 쓰기는 너무 불편하고 오래되기도 해서 마크다운으로 사용할 수 있는 블로그 툴을 찾아봤다.\n처음엔 입출력 속도만 개선해보려고 PHP 버전을 5.6에서 7.3으로 올려봤는데 텍큐가 너무 오래되다보니 패치를 해도 잘 안돌아가고 해서 v7로 올리는 건 포기.\n그 다음으로는 업뎃 잘되는 워드프레스에 텍스트큐브의 블로그 내용을 다 옮기고 기술내용도 거기서 다 같이 쓸려고 했다.\n그래서 TTXML Importer로 데이터를 옮겨봤는데 글만 옮겨지고 그외 카운터 정보같은건 옮길 수가 없었다.\n어차피 블로그를 깔끔하게 옮길 수 없다면 기술블로그 전용 툴을 쓰자 해서 찾은게 Ghost인데 얘는 카테고리나 사이드바 기능이 부족해서 탈락시켰다.\n그 다음으로 찾은 선택지는 정적 사이트 생성기를 이용하는 거였다. 마크다운 쓰기도 좋고, github.io 주소도 사용할 수 있으니 괜찮아보였다. 그래서 찾아보니 Jekyll에는 맘에 드는 스킨이 없어서 Hexo에 Icarus라는 테마를 붙여 써보기로 했다.\n근데 정적 사이트 생성기는 소스를 로컬에 보관하고 github.io로 퍼블리시하는 구조라, 모든 컴퓨터에 Hexo 소스를 보관할 필요가 있다. 이건 너무 바보같아서 Hexo 소스는 도커로 웹에 띄우고 이놈으로부터 github.io에 퍼블리싱하는 방법을 쓰기로 했다. 굳이 따지면 웹에 띄운 시점에서 바로 접속이 가능하니 굳이 퍼블리시를 할 필요는 없는거긴 한데 사이트를 매번 변환하는것보다는 당연히 변환된 저장소에 접속하는 편이 빠르고 무엇보다 github.io 주소를 쓰는 편이 더 geek하기 때문에 사용하기로 했다.\n그래서 이 포스트에서는 리눅스 서버에 도커로 Hexo를 띄우고, Hexo-admin 플러그인으로 퍼블리시한 파일을 github.io에 deploy하여 최종적으로는 유저명.github.io로 정적 블로그를 구축하는 법을 설명한다.\ngithub repository 생성  https://docs.github.com/en/free-pro-team@latest/github/working-with-github-pages/creating-a-github-pages-site 깃헙에 유저명.github.io라는 저장소 생성 이때 속성은 Public, Initialize this repository with a README를 선택 생성된 저장소의 settings → GitHub Pages → Theme Chooser 에서 테마를 아무거나 하나 골라주면 블로그가 가동됨 Your site is published at https://유저명.github.io/ 메시지가 뜨면 접속가능하게 된거임  도커 이미지 선정  https://github.com/spurin/docker-hexo Hexo와 관리용 Hexo-admin이 포함되어 있는 이미지  icarus 테마 셋업 # ssh로 접속 sudo su - docker ps # 현재 실행중인 컨테이너 확인 docker exec -it xxxxxxxxxxxx /bin/bash # 컨테이너에 접속 git clone https://github.com/ppoffice/hexo-theme-icarus.git themes/icarus # 테마 의존성 패키지 일괄설치 npm install --save bulma-stylus@0.8.0 hexo-renderer-inferno@^0.1.3 hexo-component-inferno@^0.10.1 inferno@^7.3.3 inferno-create-element@^7.3.3 # _config.yml의 theme가 landscape인데 icarus로 수정 hexo-admin에 패스워드 설정  Settings \u0026gt; Setup authentification에서 YAML을 생성 _config.yml의 admin: 밑에 붙여넣는다  hexo-admin에서 deploy 설정  https://github.com/jaredly/hexo-admin/issues/70 sh파일을 만들고 yml 파일을 수정한다  npm install --save hexo-deployer-git # git 배포용 플러그인 설치 touch hexo-deploy.sh; chmod a+x hexo-deploy.sh #!/usr/bin/env sh hexo clean hexo deploy # _config.yml을 수정 deploy: type: git repo: https://계정:패스워드@github.com/저장소.git admin: deployCommand: './hexo-deploy.sh' 유용한 플러그인 hexo-deployer-git  git으로 배포하기 위한 플러그인  # 설치 npm install hexo-deployer-git --save hexo-generator-feed  atom(url/atom.xml ) 혹은 rss2.0(url/rss2.xml)으로 피드 생성해 줌  # 설치 npm install hexo-generator-feed --save # _config.yml 파일 끝에 다음 행 추가 feed: enable: true type: rss2 path: rss2.xml limit: 20 hexo-generator-sitemap  sitemap.xml 파일을 자동생성  # 설치 npm install hexo-generator-sitemap --save # _config.yml 파일 맨 끝에 다음 행 추가 sitemap: path: sitemap.xml hexo-math  KaTeX and MathJax를 활성화 시켜주는 플러그인 플러그인 설치  # 설치 npm install hexo-math --save  사용예  {% mathjax %} \\frac{1}{x^2-1} {% endmathjax %} ","description":"","id":7,"section":"posts","tags":["docker","hexo","github.io","blog"],"title":"도커로 Hexo 블로그 만들고 github.io 주소로 접속하기","uri":"http://cliearl.github.io/posts/docker-hexo-blog/"},{"content":" 도연초 [제 150단]\n이제부터 예술을 익히려는 사람은 일단 \u0026ldquo;못하니까 다른 사람에게 보여주고 싶지 않다. 남몰래 연습해서, 어느정도 볼만하게 되면 보여주는게 멋있다\u0026quot;라고 말하게 되지만, 그런 말을 하는 사람이 최종적으로 성공한 예는 하나도 없다.\n아직 미숙하고 못할 때부터, 베테랑에다 잘하는 사람과 섞여서 바보 취급 당하고 비웃음을 받고 그래도 부끄러워하지 않고 열심히 하면, 특별한 재능이 없어도 잘 하게 된다. 길을 벗어나거나, 아류에 고집하는 일도 없을 것이다. 그대로 연습을 계속하면 그런 태도를 바보취급한 사람들을 아득히 뛰어넘어 달인이 되어간다. 인간적으로도 성장하게 되고, 주변으로부터 존경을 받게 된다.\n지금은 \u0026ldquo;천하에 비길 자 없다\u0026quot;라고 불리는 사람도 처음엔 비웃음당하고, 욕을 먹고, 굴욕을 맛보았다. 그래도 그 사람이 올바르게 배우고, 그 길을 한걸음 한걸음 계속 전진한 덕분에, 많은 사람들이 그 가르침을 받을 수 있게 되었다. 어떠한 세계든지, 똑같은 것이다.\n  “No pessimist ever discovered the secret of the stars, or sailed to an uncharted land, or opened a new doorway for the human spirit.” — Hellen Keller\n  “We are what we repeatedly do. Excellence, then, is not an act, but a habit.” — Will Durant\n  “Excellence is never an accident. It is always the result of high intention, sincere effort, and intelligent execution; it represents the wise choice of many alternatives - choice, not chance, determines your destiny.” ― Aristotle\n ","description":"About Page","id":8,"section":"","tags":null,"title":"About","uri":"http://cliearl.github.io/about/"}]