<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Memory Leak on 냉동코더의 기술블로그</title>
    <link>https://cliearl.github.io/tags/memory-leak/</link>
    <description>Recent content in Memory Leak on 냉동코더의 기술블로그</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 05 Dec 2021 10:20:46 +0900</lastBuildDate><atom:link href="https://cliearl.github.io/tags/memory-leak/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>View Binding 사용시 Fragment의 메모리 누수 대응하기</title>
      <link>https://cliearl.github.io/posts/android/prevent-fragment-memory-leak-during-viewbinding/</link>
      <pubDate>Sun, 05 Dec 2021 10:20:46 +0900</pubDate>
      
      <guid>https://cliearl.github.io/posts/android/prevent-fragment-memory-leak-during-viewbinding/</guid>
      <description>들어가기 findViewById 대신 View Binding 사용하기 강의에서 View Binding에 대해 다루었습니다. View Binding을 도입하면 코드를 더 안전하게 작성할 수 있고 빌드도 빠르게 할 수 있습니다.
 출처 : https://www.youtube.com/watch?v=Qxj2eBmXLHg 
Fragment에서의 메모리 누수 그런데 Fragment에서 View Binding을 쓸 때는 메모리 누수가 일어날 수 있는 문제가 있습니다. 다음 그림을 보시면 Fragment 속의 View는 onDestroyView에서 파괴되고 생명주기가 종료되지만, 그 시점에서 Fragment는 여전히 유지되고 있는 것을 알 수 있습니다.
 출처: https://developer.android.com/guide/fragments/lifecycle</description>
    </item>
    
  </channel>
</rss>
