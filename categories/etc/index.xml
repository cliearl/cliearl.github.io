<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>etc on Home</title>
    <link>https://cliearl.github.io/categories/etc/</link>
    <description>Recent content in etc on Home</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko</language>
    <copyright>&amp;copy;{year}, All Rights Reserved</copyright>
    <lastBuildDate>Fri, 11 Jun 2021 20:55:40 +0900</lastBuildDate>
    <sy:updatePeriod>daily</sy:updatePeriod>
    
        <atom:link href="https://cliearl.github.io/categories/etc/index.xml" rel="self" type="application/rss+xml" />
    

      
      <item>
        <title>전자책 관리 앱 Calibre-web 도입</title>
        <link>https://cliearl.github.io/posts/etc/introduce-calibre-web/</link>
        <pubDate>Fri, 11 Jun 2021 20:55:40 +0900</pubDate>
        
        <atom:modified>Fri, 11 Jun 2021 20:55:40 +0900</atom:modified>
        <guid>https://cliearl.github.io/posts/etc/introduce-calibre-web/</guid>
        <description>&lt;p&gt;전자책을 관리해야 할 필요성이 생겨서 셀프호스팅 가능한 오픈소스 앱을 알아봤다.&lt;/p&gt;</description>
        <content:encoded>&lt;p&gt;전자책을 관리해야 할 필요성이 생겨서 셀프호스팅 가능한 오픈소스 앱을 알아봤다.&lt;/p&gt;
&lt;p&gt;전자책 프로젝트 중 현재 활발하게 업데이트 되는 프로젝트는 다음 세개 정도 되는것 같았다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://calibre-ebook.com/&#34;&gt;Calibre&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://vaemendis.net/ubooquity/&#34;&gt;Ubooquity&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://komga.org/&#34;&gt;Komga&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;그런데 이 중 Ubooquity와 Komga는 일반서적보다는 만화책 관리가 더 메인인 것 같아서 Calibre를 선택했다.&lt;/p&gt;
&lt;p&gt;캘리버를 도커에 띄우기 위한 이미지가 여러가지 있는데 linuxserver.io에서 관리하는 훌륭한 &lt;a href=&#34;https://hub.docker.com/r/linuxserver/calibre-web&#34;&gt;linuxserver/calibre-web&lt;/a&gt; 이미지가 있어서 그걸 사용하기로 했다.&lt;/p&gt;
&lt;p&gt;캘리버-웹 설치시 문제가 하나 있는데 설치 직후 DB 로케이션 입력이 안된다는 점이다. 캘리버가 실행될려면 DB 폴더 아래에 metadata.db 파일이 있어야 되는데 파일이 없을경우 자동으로 생성되지 않게 되어 있다. 아마도 오프라인 캘리버 앱을 연동해서 쓰는 사람들을 배려해서 DB를 자동으로 초기화하지 않도록 한 것 같다.&lt;/p&gt;
&lt;p&gt;근데 어쨌든 처음 사용자는 metadata.db가 필요하다. 이 파일이 없으면 오프라인 앱에서 생성해서 복사하는 법이 있는데 이것보다는 설치할 때 자동으로 생성되게 하고 퍼미션도 줘버리는게 편하다.&lt;/p&gt;
&lt;p&gt;찾아보니 역시 깃헙에서 &lt;a href=&#34;https://github.com/linuxserver/docker-calibre-web/issues/30&#34;&gt;이슈&lt;/a&gt;가 열렸고 해결책도 있다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;우선은 /books 디렉토리 아래에 /custom-cont-init.d 라는 디렉토리를 만든다.&lt;/li&gt;
&lt;li&gt;이 안에 다음과 같은 내용의 metadata_generator.sh 파일을 생성한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;FILE&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;/books/metadata.db
&lt;span class=&#34;nv&#34;&gt;PUID&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1000&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;PGID&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1000&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;test&lt;/span&gt; -f &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$FILE&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$FILE&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; already exists, skipping generation.&amp;#34;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$FILE&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; does not exists, generating...&amp;#34;&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; /app/calibre/bin
    calibredb restore_database --really-do-it --with-library /books
    &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$FILE&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; created, setting permissions...&amp;#34;&lt;/span&gt;
    chmod a+w &lt;span class=&#34;nv&#34;&gt;$FILE&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# this is needed for uploads, you can remove it if you don&amp;#39;t want to allow uploads&lt;/span&gt;
    chown &lt;span class=&#34;nv&#34;&gt;$PUID&lt;/span&gt;:&lt;span class=&#34;nv&#34;&gt;$PGID&lt;/span&gt; /books
    &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Permissions fixed, use /books as library path&amp;#34;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;profit!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;부록으로 프로그래밍 관련 서적을 무료로 다운받을 수 있는 사이트를 하나 적어둔다&lt;br /&gt;
&lt;a href=&#34;https://ebookfoundation.github.io/free-programming-books/&#34;&gt;free-programming-books&lt;/a&gt;&lt;/p&gt;</content:encoded>
        <dc:creator>냉동코더</dc:creator>
        
        
        
        
          
            
              <category>Calibre-web</category>
            
          
            
              <category>docker</category>
            
          
        
        
          
            
              <category>etc</category>
            
          
        
        
      </item>
      
      <item>
        <title>패스워드 매니저 교체기</title>
        <link>https://cliearl.github.io/posts/etc/password-manager/</link>
        <pubDate>Wed, 24 Mar 2021 23:03:54 +0900</pubDate>
        
        <atom:modified>Wed, 24 Mar 2021 23:03:54 +0900</atom:modified>
        <guid>https://cliearl.github.io/posts/etc/password-manager/</guid>
        <description>&lt;p&gt;패스워드 매니저는 웹브라우저에서 아이디와 패스워드를 자동으로 넣어주는 프로그램입니다.&lt;/p&gt;</description>
        <content:encoded>&lt;p&gt;패스워드 매니저는 웹브라우저에서 아이디와 패스워드를 자동으로 넣어주는 프로그램입니다.&lt;/p&gt;
&lt;h2 id=&#34;들어가기&#34;&gt;들어가기&lt;/h2&gt;
&lt;p&gt;저는 패스워드 매니저로 &lt;a href=&#34;https://www.lastpass.com/&#34;&gt;LastPass&lt;/a&gt;를 사용하고 있습니다. 과거에 &lt;a href=&#34;http://www.bloter.net/archives/230283&#34;&gt;해킹&lt;/a&gt;당한 적도 있었지만 그 이후 큰 이슈가 없었고 사용하기 편해서 계속 사용하고 있습니다.&lt;/p&gt;
&lt;p&gt;크롬, 파이어폭스, 사파리, 엣지, 오페라 등의 브라우저에서 작동하며 안드로이드, iOS, 윈도우, 맥을 지원하고 터치ID도 대응하기 때문에 여러 장치사이에서 동기화하며 잘 사용하고 있었습니다&amp;hellip;만 2021년 3월 16일부터 무료이용자에 대한 &lt;a href=&#34;(https://blog.lastpass.com/2021/02/changes-to-lastpass-free/)&#34;&gt;정책을 변경&lt;/a&gt;하였습니다.&lt;/p&gt;
&lt;p&gt;그 내용은 컴퓨터 혹은 모바일 기기 둘 중 하나에서만 자유롭게 사용하게 할 것이고 양쪽 모두에서 사용하고 싶다면 한달에 3달러인 &lt;a href=&#34;https://www.lastpass.com/pricing&#34;&gt;프리미엄 플랜&lt;/a&gt;에 가입해야 한다는 것 입니다. 그 덕분에 &lt;a href=&#34;https://addons.mozilla.org/ko/firefox/addon/lastpass-password-manager/reviews/&#34;&gt;LastPass 파이어폭스 플러그인&lt;/a&gt;은 별점 테러를 먹고 있는 중입니다.&lt;/p&gt;
&lt;p&gt;성능이 나쁘지 않은것도 있었지만 LastPass의 가장 큰 장점 중 하나는 무료로 사용이 가능하다는 점이었기 때문에 갈아탈 때가 된 것 같다는 생각이 들었습니다.&lt;/p&gt;
&lt;p&gt;이것저것 찾아봤는데 복수의 기기에서 무료로 이용할 수 있게 해주는 자비로운 서비스는 존재하지 않았고, 거의 대부분이 서비스를 유로플랜으로 제공하고 있었습니다.&lt;/p&gt;
&lt;h2 id=&#34;lastpass-대체서비스&#34;&gt;Lastpass 대체서비스&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;서비스&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;무료 플랜&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;파폭 플러그인&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://bitwarden.com/&#34;&gt;Bitwarden&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;모든 기기, 암호 무제한&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;있음&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://www.dashlane.com/&#34;&gt;Dashlane&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;기기 한대, 암호 50개&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;없음&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://www.roboform.com/&#34;&gt;LastPass&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;기기 한 종류, 암호 무제한&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;있음&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://nordpass.com/&#34;&gt;NordPass&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;모든 기기, 암호 무제한&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;있음&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://www.roboform.com/&#34;&gt;Roboform&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;기기 한대, 암호 무제한&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;있음&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;이 중 모든기기에서 사용 가능한건 Bitwarden과 NordPass인데 NordPass는 &lt;a href=&#34;https://addons.mozilla.org/ko/firefox/addon/nordpass-password-manager/&#34;&gt;파이어폭스 플러그인&lt;/a&gt;의 평이 그리 좋지 않습니다. 거기다 이 서비스도 언제 유료화 할지 모르니 &lt;a href=&#34;https://github.com/bitwarden&#34;&gt;오픈소스&lt;/a&gt;로 개발되는 Bitwarden을 사용하기로 결정했습니다. &lt;a href=&#34;https://addons.mozilla.org/ko/firefox/addon/bitwarden-password-manager/&#34;&gt;파이어폭스 플러그인&lt;/a&gt;의 평도 좋고 인터넷에서의 평도 나쁘지 않은것 같습니다.&lt;/p&gt;
&lt;h2 id=&#34;bitwarden&#34;&gt;Bitwarden&lt;/h2&gt;
&lt;p&gt;Bitwarden의 경우 세 가지 사용방법이 있습니다&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://bitwarden.com/pricing/&#34;&gt;공식 홈페이지&lt;/a&gt;에서 가입하여 사용&lt;/li&gt;
&lt;li&gt;공개된 &lt;a href=&#34;https://github.com/bitwarden/server&#34;&gt;코드&lt;/a&gt;를 개인용 NAS에 Docker &lt;a href=&#34;https://hub.docker.com/r/bitwarden/setup&#34;&gt;이미지&lt;/a&gt;로 설치하여 사용&lt;/li&gt;
&lt;li&gt;공식 도커이미지는 &lt;a href=&#34;https://bitwarden.com/help/article/install-on-premise/&#34;&gt;서버 요구스펙&lt;/a&gt;이 높은데 이 것을 저사양 서버에서도 돌아가도록 개인이 편집한 &lt;a href=&#34;https://github.com/dani-garcia/bitwarden_rs&#34;&gt;소스&lt;/a&gt;에서 만들어진 도커 &lt;a href=&#34;https://hub.docker.com/r/bitwardenrs/server&#34;&gt;이미지&lt;/a&gt;로 설치&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;개인이 쓸 거면 bitwarden_rs 를 사용하는것만으로 아마 충분하겠지만 역시 개인 프로젝트는 언제 어떤식으로 중단될 지 알 수 없고 그 경우 관리상 여러가지 곤란한 점이 생길 수 있습니다.&lt;/p&gt;
&lt;p&gt;현재로서는 소스를 퍼블릭 공개하고 있는 Bitwarden 회사가 나의 패스워드를 함부로 다루지 않을 것이라는 믿음을 가져보기로 했고 그렇다면 보안의 관점에서 볼 때 개인용 NAS에 보관하는 것 보다는 회사 서버에 보관하는 것이 더 낫다고 생각해서 공식 홈페이지에 가입하여 서비스를 사용해 보기로 했습니다.&lt;/p&gt;
&lt;p&gt;또 공식서버에서 운용하다가 뭔가 맘에 안드는 점이 있다면 그때가서 개인 NAS로 옮겨도 될 것 같네요.&lt;/p&gt;</content:encoded>
        <dc:creator>냉동코더</dc:creator>
        
        
        
        
          
            
              <category>lastpass</category>
            
          
            
              <category>bitwarden</category>
            
          
        
        
          
            
              <category>etc</category>
            
          
        
        
      </item>
      
      <item>
        <title>녹음용 마이크 교체기</title>
        <link>https://cliearl.github.io/posts/etc/changemic/</link>
        <pubDate>Mon, 22 Mar 2021 18:44:42 +0900</pubDate>
        
        <atom:modified>Mon, 22 Mar 2021 18:44:42 +0900</atom:modified>
        <guid>https://cliearl.github.io/posts/etc/changemic/</guid>
        <description>&lt;p&gt;지금까지 사용하던 녹음환경을 개선하였습니다.&lt;/p&gt;</description>
        <content:encoded>&lt;p&gt;지금까지 사용하던 녹음환경을 개선하였습니다.&lt;/p&gt;
&lt;h1 id=&#34;들어가기&#34;&gt;들어가기&lt;/h1&gt;
&lt;p&gt;지금까지는 음성녹음을 위해 애플 이어팟을 맥북에 연결하여 마이크로 사용하고 있었습니다.&lt;br /&gt;
&lt;img src=&#34;https://ww.namu.la/s/34db5356ef9ac1baa815b34526dfc9953c75021fddc52d2ece6a5fa8c160a04ad93d5b48538e3b7bdb8adf123e6d9fdd392c4de9c0213df60e77f11d990fece83acbcc565ab4cb9f2bbe9ba778e6be75cab1370edebc0c73cf1abd3483b8d9ab&#34; alt=&#34;이어팟&#34; /&gt;&lt;/p&gt;
&lt;p&gt;핸즈프리인것 치고는 마이크 성능이 나쁘지 않았는데요, 최근 맥북에서 녹음할 때 드라이버 충돌이 있었는지 목욕탕에서 녹음하는것처럼 소리가 울리는 문제가 발생했기에 새로 마이크를 들이기로 했습니다.&lt;/p&gt;
&lt;p&gt;컨셉은 20만원대에서 믹서없이 사용할 수 있는 USB 콘덴서마이크였습니다.&lt;/p&gt;
&lt;h1 id=&#34;검토한-마이크들&#34;&gt;검토한 마이크들&lt;/h1&gt;
&lt;h2 id=&#34;nt-usb&#34;&gt;NT-USB&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn2.rode.com/images/products/nt-usb/gallery/2.jpg?v=1608614861&#34; alt=&#34;이미지&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://ko.rode.com/microphones/nt-usb&#34;&gt;https://ko.rode.com/microphones/nt-usb&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;워낙 평도 좋고 가성비도 좋아서 눈여겨보고있던 마이크였는데 최근에 가격이 좀 올랐습니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;nt-usb-mini&#34;&gt;NT-USB Mini&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn2.rode.com/images/products/nt-usb_mini/gallery/04.jpg?v=1608614861&#34; alt=&#34;이미지&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;NT-USB에 비하면 해상도가 24비트로 더 높고 연결단자가 USB-C라는 장점이 있으나 팝필터가 내장이라는 점이 별로였네요. 다만 유튜브에서 찾아보니 음질은 나쁘지 않았습니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;blue-yeti-x&#34;&gt;Blue Yeti X&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://s3.amazonaws.com/cd.bluemic.com/img/yeti-x/yeti-x-feature-desktop@2x.jpg&#34; alt=&#34;이미지&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.bluemic.com/ko-kr/products/yeti-x/&#34;&gt;https://www.bluemic.com/ko-kr/products/yeti-x/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;스펙도 훌륭하고 녹음패턴도 4가지나 가지고 있어 게스트를 두고 녹음하는 것도 가능하다. 소리크기에 LED가 반응하는것도 이쁘고 유튜브에서 청음해보니 음질도 좋은 편이다. 마이크 컨트롤용 앱도 잘 만들어놓은것 같았다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;at-2020usb&#34;&gt;AT-2020USB+&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://www.audio-technica.com/en-us/media/catalog/product/cache/aee8318de9d8e245b6b604605849c7dc/a/t/at2020usb_plus_03.png&#34; alt=&#34;이미지&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.audio-technica.com/en-us/at2020usb&#34;&gt;https://www.audio-technica.com/en-us/at2020usb&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;실 사용기를 보면 폴라패턴이 좀 넓은듯한데 그래도 훌륭한 마이크인것 같다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;그래서-구입한-장비-뒷광고-아닙니다&#34;&gt;그래서 구입한 장비 (뒷광고 아닙니다!)&lt;/h1&gt;
&lt;h2 id=&#34;rode-nt-usb&#34;&gt;RODE NT-USB&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;여러가지 비교포인트는 있었는데 마이크별로 극적인 차이는 없었습니다.&lt;/li&gt;
&lt;li&gt;결국 바다씨의 &lt;a href=&#34;https://youtu.be/nLu_RhM2nWk&#34;&gt;speechless&lt;/a&gt;를 듣고 NT-USB를 구입해버렸습니다&amp;hellip; 흠&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/nLu_RhM2nWk&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h2 id=&#34;아리스노보-uma-rf03-리플렉션-필터&#34;&gt;아리스노보 UMA-RF03 리플렉션 필터&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://shop-phinf.pstatic.net/20190724_143/unimax5_1563945228520G1lPo_JPEG/1308617088570107_1616478001.jpg&#34; alt=&#34;이미지&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://smartstore.naver.com/arsnovo/products/4609145421&#34;&gt;https://smartstore.naver.com/arsnovo/products/4609145421&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;환경개선-비교&#34;&gt;환경개선 비교&lt;/h1&gt;
&lt;p&gt;20만원대 마이크를 2만5천원짜리 핸즈프리와 비교하는것은 이어팟에 너무 가혹한 일이지만 한번 비교를 해보겠습니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;우선은 화이트노이즈가 개선되었습니다. 이어팟은 목소리 자체는 비교적 깨끗하게 잡아주지만, 화이트노이즈가 꽤 큰편인데 로데로 교체하면서 화이트노이즈가 많이 사라졌습니다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;이어팟이 옷과 부딪힐때 나는 잡음이 사라졌습니다. 타이핑이나 마우스를 조작하다보면 이어팟의 볼륨조절버튼이 옷에 부딪히면서 바스락거리는 잡음이 수음되곤 했는데 마이크를 암 스탠드에 거치하고 책상과 이격시키면서 옷에서 나는 잡음을 잡았습니다. 또 키보드를 두드릴 때와 마우스를 들었다놨다 할때 책상에 전해지는 소음도 억제할 수 있게 되었습니다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;반향음을 억제할 수 있게 되었습니다. 기존에는 무료로 대여할 수 있는 녹음실에서 녹음을 했었는데 이 방은 방음처리가 잘 되어 있어서 외부에서 들어오는 잡음이나 반향음을 신경 쓸 필요가 없었습니다. 그런데 코로나로 녹음실을 사용할 수 없게 되면서 집에서 녹음했더니 반향음이 있었습니다. 하지만 이번에 마이크를 구매하면서 같이 구입한 리플렉션필터 덕분인지 반향음이 잘 잡히게 되었습니다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;목소리를 모니터링할수 있게 되었습니다. 이어팟으로 녹음할 때는 어디서 소음이 잡히는지 내 목시리가 어떻게 녹음되고 있는지 알 길이 없었습니다. 하지만 마이크의 모니터링단자에서 목소리를 확인하면서 녹음하니 노이즈가 들어가거나 입이 마이크에서 좀 떨어져있구나 하는 것들을 실시간으로 확인할 수 있어서 작업이 수월해졌습니다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;마이크 성능이 좋다보니 ASMR도 됩니다. 마지막으로 서정시 한편을 읽으며 마치겠습니다.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;box&#34;&gt;&lt;p&gt;어둠에다크에서 죽음의데스를 느끼며&lt;br /&gt;
서쪽에서 불어오는 바람의윈드를 맞았다.&lt;/p&gt;
&lt;p&gt;그것은 운명의데스티니.&lt;/p&gt;
&lt;p&gt;그는 인생의 라이프를 끝내기 위해 디엔드.&lt;/p&gt;
&lt;p&gt;모든것을 옭아매는 폭풍같은 스톰에서 벗어나기 위해&lt;br /&gt;
결국 자신 스스로를 죽음에데스로 몰아갔다.&lt;br /&gt;
후에 전설의 레전드로써 기억에 메모리- 기적에미라클&lt;/p&gt;
&lt;p&gt;길이길이 가슴속의하트에 기억될 리멤버.&lt;/p&gt;
&lt;p&gt;끝에 Fin&lt;/p&gt;
&lt;/div&gt;</content:encoded>
        <dc:creator>냉동코더</dc:creator>
        
        
        
        
          
            
              <category>mic</category>
            
          
        
        
          
            
              <category>etc</category>
            
          
        
        
      </item>
      
      <item>
        <title>Hugo Blog</title>
        <link>https://cliearl.github.io/posts/etc/hugo-blog/</link>
        <pubDate>Thu, 04 Mar 2021 22:24:02 +0900</pubDate>
        
        <atom:modified>Thu, 04 Mar 2021 22:24:02 +0900</atom:modified>
        <guid>https://cliearl.github.io/posts/etc/hugo-blog/</guid>
        <description>&lt;p&gt;기술블로그 엔진을 Hugo에서 Hexo로 바꾸어 보았다.&lt;/p&gt;</description>
        <content:encoded>&lt;p&gt;기술블로그 엔진을 Hugo에서 Hexo로 바꾸어 보았다.&lt;/p&gt;
&lt;p&gt;Hexo에 Icarus 태그를 씌우고 도커에 올려서 잘 쓰고 있었는데 내가 사용한 도커 이미지는 업뎃이 안된다는 문제가 있었다.&lt;br /&gt;
&lt;a href=&#34;https://github.com/spurin/docker-hexo&#34;&gt;https://github.com/spurin/docker-hexo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;그래서 비슷한 엔진인 Hugo를 찾아보았는데 Hugo의 도커 이미지는 관리가 잘 되고 있었다.&lt;br /&gt;
&lt;a href=&#34;https://hub.docker.com/r/klakegg/hugo/&#34;&gt;https://hub.docker.com/r/klakegg/hugo/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;근데 이상하게도 이 이미지를 비롯한 모든 hugo의 도커 이미지는 내 환경에서 실행이 안됐다. 짜증나기도 하고 이왕 이렇게 된거 로컬에서 실행하기로 했다. 맥북에서 하면 brew를 사용하기 때문에 업뎃도 쉬워서 관리가 편하다. hexo가 brew로 관리가 안된다는 점도 hugo로 온 이유중에 하나. Go를 쓰니까 빠르다는 점은 그렇게까진 다가오지 않았다.&lt;/p&gt;
&lt;h2 id=&#34;hugo-초기화&#34;&gt;hugo 초기화&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ brew install hugo  // hugo를 인스톨
$ hugo new site &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;생성할 폴더 이름&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;깃-준비&#34;&gt;깃 준비&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; cliearl.github.io
$ git init
$ git remote add origin &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;https://hugo 원본파일을 보관할 저장소&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
$ git submodule add &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;https://hugo가 생성한 사이트를 업로드할 저장소&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; public
$ git submodule add &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;https://github.com/zzossig/hugo-theme-zzo.git&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; themes/zzo
$ git submodule update --init --recursive  // 테마가 업데이트 될 경우 반영
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;글-작성-후-확인&#34;&gt;글 작성 후 확인&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ hugo new posts/test.md  // 새로운 글 작성
$ hugo server -D  // localhost:1313에서 만들어진 정적사이트를 확인
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;페이지-작성-후-업로드&#34;&gt;페이지 작성 후 업로드&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ hugo -t &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;테마이름&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;  // 정적사이트 생성
$ &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; public
$ git add .
$ git commit -m &lt;span class=&#34;s2&#34;&gt;&amp;#34;deploy updates&amp;#34;&lt;/span&gt;
$ git push origin main
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;커밋-자동화-스크립트&#34;&gt;커밋 자동화 스크립트&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; -e &lt;span class=&#34;s2&#34;&gt;&amp;#34;\033[0;32mDeploying updates to GitHub...\033[0m&amp;#34;&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# Build the project.&lt;/span&gt;
hugo -t zzo

&lt;span class=&#34;c1&#34;&gt;# Go To Public folder&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; public
&lt;span class=&#34;c1&#34;&gt;# Add changes to git.&lt;/span&gt;
git add .

&lt;span class=&#34;c1&#34;&gt;# Commit changes.&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;msg&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;rebuilding site `date`&amp;#34;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$#&lt;/span&gt; -eq &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;msg&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$1&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;
git commit -m &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$msg&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# Push source and build repos.&lt;/span&gt;
git push origin main

&lt;span class=&#34;c1&#34;&gt;# Come Back up to the Project Root&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; ..


&lt;span class=&#34;c1&#34;&gt;# blog 저장소 Commit &amp;amp; Push&lt;/span&gt;
git add .

&lt;span class=&#34;nv&#34;&gt;msg&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;rebuilding site `date`&amp;#34;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$#&lt;/span&gt; -eq &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;msg&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$1&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;
git commit -m &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$msg&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;

git push origin master
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;검색엔진에-등록&#34;&gt;검색엔진에 등록&lt;/h2&gt;
&lt;h3 id=&#34;google-search-console&#34;&gt;Google Search Console&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.google.com/webmasters/tools/&#34;&gt;Google Search Console&lt;/a&gt;에 접속&lt;/li&gt;
&lt;li&gt;속성 추가 후 URL 접두어에서 github.io 주소 입력&lt;/li&gt;
&lt;li&gt;HTML파일로 확인 선택 -&amp;gt; 파일 다운로드&lt;/li&gt;
&lt;li&gt;hugo의 public 폴더에 복사하면 루트에 업로드 됨&lt;/li&gt;
&lt;li&gt;소유권 확인됨&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;configtoml-수정&#34;&gt;config.toml 수정&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;# 로봇 검색 허용
enableRobotsTXT = true

# 사이트맵 작성
[sitemap]
changefreq = &amp;quot;daily&amp;quot;
filename = &amp;quot;sitemap.xml&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;서치콘솔에-등록&#34;&gt;서치콘솔에 등록&lt;/h3&gt;
&lt;p&gt;Sitemaps 메뉴에서 &amp;hellip;/sitemap.xml을 등록.&lt;/p&gt;</content:encoded>
        <dc:creator>냉동코더</dc:creator>
        
        
        
        
          
            
              <category>hugo</category>
            
          
            
              <category>blog</category>
            
          
        
        
          
            
              <category>etc</category>
            
          
        
        
      </item>
      
      <item>
        <title>내가 사용하는 Firefox Plugin</title>
        <link>https://cliearl.github.io/posts/etc/firefox-plugin/</link>
        <pubDate>Tue, 02 Feb 2021 02:11:13 +0900</pubDate>
        
        <atom:modified>Tue, 02 Feb 2021 02:11:13 +0900</atom:modified>
        <guid>https://cliearl.github.io/posts/etc/firefox-plugin/</guid>
        <description>&lt;p&gt;내가 사용하는 파이어폭스 플러그인을 정리해 보았다.&lt;/p&gt;</description>
        <content:encoded>&lt;p&gt;내가 사용하는 파이어폭스 플러그인을 정리해 보았다.&lt;/p&gt;
&lt;h2 id=&#34;auto-tab-discard&#34;&gt;Auto Tab Discard&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://addons.mozilla.org/ko/firefox/addon/auto-tab-discard/&#34;&gt;https://addons.mozilla.org/ko/firefox/addon/auto-tab-discard/&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;안보고 있는 탭을 자동으로 정리해서 메모리 사용량을 줄여줌.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;bitwarden&#34;&gt;Bitwarden&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://addons.mozilla.org/ko/firefox/addon/bitwarden-password-manager/&#34;&gt;https://addons.mozilla.org/ko/firefox/addon/bitwarden-password-manager/&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;패스워드 매니저.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;clear-cache&#34;&gt;Clear Cache&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://addons.mozilla.org/en-US/firefox/addon/clearcache/&#34;&gt;https://addons.mozilla.org/en-US/firefox/addon/clearcache/&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;캐시삭제 버튼을 만들어 줌.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;dark-reader&#34;&gt;Dark Reader&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://addons.mozilla.org/ko/firefox/addon/darkreader/&#34;&gt;https://addons.mozilla.org/ko/firefox/addon/darkreader/&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;모든 웹사이트에 다크모드를 적용하여 어둡게 보이도록 함.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;download-filename-encoding&#34;&gt;Download Filename Encoding&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://addons.mozilla.org/ko/firefox/addon/download-filename-encoding/&#34;&gt;https://addons.mozilla.org/ko/firefox/addon/download-filename-encoding/&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;다운로드하는 파일명이 언어 인코딩 때문에 깨지는 것을 방지.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;download-manager-s3&#34;&gt;Download Manager (S3)&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://addons.mozilla.org/ko/firefox/addon/s3download-statusbar/&#34;&gt;https://addons.mozilla.org/ko/firefox/addon/s3download-statusbar/&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;다운로드 진행상황을 상태표시줄에 표시해줌.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;downthemall&#34;&gt;DownThemAll!&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://addons.mozilla.org/ko/firefox/addon/downthemall/&#34;&gt;https://addons.mozilla.org/ko/firefox/addon/downthemall/&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;대량의 파일을 다운로드해주는 관리자.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;enhancer-for-youtube&#34;&gt;Enhancer for YouTube&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://addons.mozilla.org/ko/firefox/addon/enhancer-for-youtube/&#34;&gt;https://addons.mozilla.org/ko/firefox/addon/enhancer-for-youtube/&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;유튜브 영상의 반복, 고정등 여러가지 기능을 추가해 줌.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;flagfox&#34;&gt;Flagfox&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://addons.mozilla.org/ko/firefox/addon/flagfox/&#34;&gt;https://addons.mozilla.org/ko/firefox/addon/flagfox/&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;현재 접속중인 서버의 위치를 국기로 표시해 줌.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;gesturefy&#34;&gt;Gesturefy&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://addons.mozilla.org/ko/firefox/addon/gesturefy/&#34;&gt;https://addons.mozilla.org/ko/firefox/addon/gesturefy/&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;마우스 제스처로 브라우저를 조작할 수 있게 함.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;google-search-link-fix&#34;&gt;Google search link fix&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://addons.mozilla.org/ko/firefox/addon/google-search-link-fix/&#34;&gt;https://addons.mozilla.org/ko/firefox/addon/google-search-link-fix/&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;구글을 통해 검색한 사이트의 링크를 복사할 때 구글 리퍼러가 붙는것을 막아줌.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;happy-right-click&#34;&gt;Happy Right-Click&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://addons.mozilla.org/ko/firefox/addon/%E5%BF%AB%E4%B9%90%E5%8F%B3%E9%94%AE/&#34;&gt;https://addons.mozilla.org/ko/firefox/addon/%E5%BF%AB%E4%B9%90%E5%8F%B3%E9%94%AE/&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;마우스 오른쪽 버튼이 막혀있는 사이트를 풀어줌.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;imagus&#34;&gt;Imagus&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://addons.mozilla.org/ko/firefox/addon/imagus/&#34;&gt;https://addons.mozilla.org/ko/firefox/addon/imagus/&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;이미지나 동영상에 커서를 갖다 대었을 때 호버링으로 크게 보여줌.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;imtranslator&#34;&gt;ImTranslator&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://addons.mozilla.org/ko/firefox/addon/imtranslator/&#34;&gt;https://addons.mozilla.org/ko/firefox/addon/imtranslator/&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;팝업 형태로 번역기를 사용할 수 있게 해줌.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;open-with&#34;&gt;Open With&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://addons.mozilla.org/ko/firefox/addon/open-with/&#34;&gt;https://addons.mozilla.org/ko/firefox/addon/open-with/&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;현재 보고있는 웹페이지를 다른 브라우저로 띄워줌.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;print-edit-we&#34;&gt;Print Edit WE&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://addons.mozilla.org/ko/firefox/addon/print-edit-we/&#34;&gt;https://addons.mozilla.org/ko/firefox/addon/print-edit-we/&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;웹 페이지에서 자신이 원하는 부분만 잘라내서 프린트하도록 도와줌.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;quick-dial&#34;&gt;Quick Dial&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://addons.mozilla.org/ko/firefox/addon/quick-dial/&#34;&gt;https://addons.mozilla.org/ko/firefox/addon/quick-dial/&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;시작 페이지에 자주가는 웹사이트를 버튼형태로 표시해 줌.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;toolbar-clock&#34;&gt;Toolbar Clock&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://addons.mozilla.org/ko/firefox/addon/toolbar-clock/&#34;&gt;https://addons.mozilla.org/ko/firefox/addon/toolbar-clock/&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;상태표시줄에 아날로그 시계를 표시해 줌.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;top-and-bottom-scroll-buttons&#34;&gt;Top and Bottom scroll buttons&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://addons.mozilla.org/ko/firefox/addon/top-and-bottom-scroll-buttons/&#34;&gt;https://addons.mozilla.org/ko/firefox/addon/top-and-bottom-scroll-buttons/&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;사이트의 맨 위 / 맨 아래로 이동하는 버튼을 표시.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ublock-origin&#34;&gt;uBlock Origin&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://addons.mozilla.org/ko/firefox/addon/ublock-origin/&#34;&gt;https://addons.mozilla.org/ko/firefox/addon/ublock-origin/&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;자원을 덜 먹는다고 선전하는 광고차단기.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;undo-close-tab&#34;&gt;Undo Close Tab&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://addons.mozilla.org/ko/firefox/addon/undoclosetabbutton/&#34;&gt;https://addons.mozilla.org/ko/firefox/addon/undoclosetabbutton/&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;최근에 닫은 탭을 다시 여는 버튼을 표시.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;view-image&#34;&gt;View Image&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://addons.mozilla.org/ko/firefox/addon/view-image/&#34;&gt;https://addons.mozilla.org/ko/firefox/addon/view-image/&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;구글에서 이미지를 검색할 때 이미지 보기 버튼을 추가함.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;wappalyzer&#34;&gt;Wappalyzer&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://addons.mozilla.org/ko/firefox/addon/wappalyzer/&#34;&gt;https://addons.mozilla.org/ko/firefox/addon/wappalyzer/&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;현재 보는 중인 사이트애 적용된 웹 기술을 보여줌.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;weautopagerize&#34;&gt;weAutoPagerize&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://addons.mozilla.org/ko/firefox/addon/weautopagerize/&#34;&gt;https://addons.mozilla.org/ko/firefox/addon/weautopagerize/&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;현재 보고있는 페이지의 다음 페이지를 미리 읽어서 현재 페이지에 연결시켜줌.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;zoom-page-we&#34;&gt;Zoom Page WE&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://addons.mozilla.org/ko/firefox/addon/zoom-page-we/&#34;&gt;https://addons.mozilla.org/ko/firefox/addon/zoom-page-we/&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;페이지 줌을 편하게 할 수 있는 버튼을 추가함.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;zotero-connector&#34;&gt;Zotero Connector&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://www.zotero.org/download/&#34;&gt;https://www.zotero.org/download/&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;서지정보 관리 프로그램인 Zotero와 브라우저를 연동시켜 줌.&lt;/li&gt;
&lt;/ul&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/poGeNaEqsDk&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;</content:encoded>
        <dc:creator>냉동코더</dc:creator>
        
        
        
        
          
            
              <category>firefox</category>
            
          
            
              <category>plugin</category>
            
          
        
        
          
            
              <category>etc</category>
            
          
        
        
      </item>
      
      <item>
        <title>노트 앱 정착기</title>
        <link>https://cliearl.github.io/posts/etc/finding-note-app/</link>
        <pubDate>Sat, 16 Jan 2021 13:18:57 +0900</pubDate>
        
        <atom:modified>Sat, 16 Jan 2021 13:18:57 +0900</atom:modified>
        <guid>https://cliearl.github.io/posts/etc/finding-note-app/</guid>
        <description>&lt;p&gt;윈도우, Mac, 스마트폰에서 모두 사용할 수 있는 메모 앱을 찾아봤다. 마크다운 포맷을 사용할 수 있으면서 메모를 디렉토리로 관리할 수 있을 것이 조건이었다.&lt;/p&gt;</description>
        <content:encoded>&lt;p&gt;윈도우, Mac, 스마트폰에서 모두 사용할 수 있는 메모 앱을 찾아봤다. 마크다운 포맷을 사용할 수 있으면서 메모를 디렉토리로 관리할 수 있을 것이 조건이었다.&lt;/p&gt;
&lt;h2 id=&#34;스탠드얼론-앱&#34;&gt;스탠드얼론 앱&lt;/h2&gt;
&lt;h3 id=&#34;ios-메모-앱&#34;&gt;iOS 메모 앱&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://support.apple.com/ko-kr/HT205773&#34;&gt;https://support.apple.com/ko-kr/HT205773&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;아이폰을 사용하고 있기에 처음에는 아이폰의 메모 앱을 사용해 봤으나 별 기능도 없고 아이클라우드환경은 윈도우 환경에서 싱크할 수가 없다는 한계가 있었다.&lt;/p&gt;
&lt;h3 id=&#34;google-keep&#34;&gt;Google Keep&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://apps.apple.com/us/app/google-keep-notes-and-lists/id1029207872&#34;&gt;https://apps.apple.com/us/app/google-keep-notes-and-lists/id1029207872&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;구글 생태계에서 사용할 수 있는 메모 앱. 워드프로세서로 사용하는 느낌이 아닌 포스트잇 같은 느낌으로 사용한다. 개인적 용도와는 맞지않아서 패스함.&lt;/p&gt;
&lt;h3 id=&#34;synology-note-station&#34;&gt;Synology Note Station&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://www.synology.com/en-us/dsm/feature/note_station&#34;&gt;https://www.synology.com/en-us/dsm/feature/note_station&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;시놀로지를 운영할 경우 사용할 수 있는 솔루션. 디렉토리 구성으로 되어있고 필기도 할 수 있는데 초기 로그인 화면이 크게 나타나는게 팬시하지 않고 데이터 싱크가 느리다.&lt;/p&gt;
&lt;h3 id=&#34;joplin&#34;&gt;joplin&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/laurent22/joplin&#34;&gt;https://github.com/laurent22/joplin&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;iOS, 안드로이드, 윈도우, Mac, 리눅스에서 사용할 수 있는 앱을 제공하며 DB는 webdav로 싱크할 수 있다. 메모는 디렉토리로 관리할 수 있다. 오픈소스로 활발하게 업데이트가 이루어진다. 딱 하나 단점은 웹앱이 없어서 브라우저에서 접근이 안된다는 것.&lt;/p&gt;
&lt;h2 id=&#34;웹-앱&#34;&gt;웹 앱&lt;/h2&gt;
&lt;p&gt;오픈소스이며 액티브하게 갱신되고 도커이미지가 있는 것을 기준으로 하여 실제로 써본 것들만을 소개한다.&lt;/p&gt;
&lt;h3 id=&#34;trillium-notes&#34;&gt;Trillium Notes&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/zadam/trilium&#34;&gt;https://github.com/zadam/trilium&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;자바스크립트로 만들어진 앱. 마크다운 스크립트를 입력하면 실시간으로 화면에 반영되는 위지위그 방식. 메모를 디렉토리 기준으로 관리하며 글만이 아니라 관계도도 그릴 수 있고 암튼 사용할 수 있는 문서형태가 다양하다.&lt;/p&gt;
&lt;h3 id=&#34;bookstack&#34;&gt;BookStack&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/BookStackApp/BookStack&#34;&gt;https://github.com/BookStackApp/BookStack&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;PHP와 라라벨로 만들어진 앱. 메모를 서고와 서가형태로 관리하는데 개인적으로는 이 부분이 직관적으로 느껴지지 않아서 적응하지 못했다.&lt;/p&gt;
&lt;h3 id=&#34;wikijs&#34;&gt;Wiki.js&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Requarks/wiki&#34;&gt;https://github.com/Requarks/wiki&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Node.js로 만들어진 앱. 메모를 디렉토리 구조로 관리하며 퍼포먼스도 나쁘지 않아 현재 주력으로 사용중.&lt;/p&gt;</content:encoded>
        <dc:creator>냉동코더</dc:creator>
        
        
        
        
          
            
              <category>google keep</category>
            
          
            
              <category>synology</category>
            
          
            
              <category>note station</category>
            
          
            
              <category>note app</category>
            
          
            
              <category>joplin</category>
            
          
            
              <category>bookstack</category>
            
          
            
              <category>wiki.js</category>
            
          
        
        
          
            
              <category>etc</category>
            
          
        
        
      </item>
      
      <item>
        <title>작업용 폰트 정보 정리</title>
        <link>https://cliearl.github.io/posts/etc/fonts-for-work/</link>
        <pubDate>Sun, 03 Jan 2021 02:39:00 +0900</pubDate>
        
        <atom:modified>Sun, 03 Jan 2021 02:39:00 +0900</atom:modified>
        <guid>https://cliearl.github.io/posts/etc/fonts-for-work/</guid>
        <description>&lt;p&gt;작업환경에서 사용하는 폰트에 대하여 정리해 보았다.&lt;/p&gt;</description>
        <content:encoded>&lt;p&gt;작업환경에서 사용하는 폰트에 대하여 정리해 보았다.&lt;/p&gt;
&lt;h2 id=&#34;텍스트-에디터용-폰트&#34;&gt;텍스트 에디터용 폰트&lt;/h2&gt;
&lt;p&gt;메모장, 워드, 파워포인트, 한글 등에서 한국어, 영어, 일본어를 모두 표시할 수 있는 폰트가 필요하다.&lt;/p&gt;
&lt;h3 id=&#34;google-noto-fonts&#34;&gt;Google Noto Fonts&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;어도비와 구글이 합작하여 본고딕이라는 폰트를 출시했다. &lt;a href=&#34;https://blog.typekit.com/alternate/source-han-sans-kor/&#34;&gt;https://blog.typekit.com/alternate/source-han-sans-kor/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;이 폰트는 구글에서 Noto Fonts라는 이름으로 풀었다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;다운로드 &lt;a href=&#34;https://www.google.com/get/noto/help/cjk/&#34;&gt;https://www.google.com/get/noto/help/cjk/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;kopubworld&#34;&gt;KoPubWorld&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;한국출판인회의에서 전자출판에 특화된 서체를 풀었다.&lt;/li&gt;
&lt;li&gt;다운로드 &lt;a href=&#34;http://www.kopus.org/Biz/electronic/Font.aspx&#34;&gt;http://www.kopus.org/Biz/electronic/Font.aspx&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;네이버-나눔폰트&#34;&gt;네이버 나눔폰트&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;네이버에서 나눔시리즈 폰트를 풀었다.&lt;/li&gt;
&lt;li&gt;다운로드 &lt;a href=&#34;https://hangeul.naver.com/2017/nanum&#34;&gt;https://hangeul.naver.com/2017/nanum&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;코딩용-폰트&#34;&gt;코딩용 폰트&lt;/h2&gt;
&lt;p&gt;코딩용 폰트에 요구되는 사항들&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;문자열을 스페이스단위로 일치시켜야 하므로 폰트가 고정폭(Monospaced)이어야 한다.&lt;/li&gt;
&lt;li&gt;오인식하기 쉬운 알파벳, 특수문자에 대한 대책이 있어야 한다.&lt;/li&gt;
&lt;li&gt;특수문자의 가독성을 높여준다고 하는 Ligature는 필수는 아니다.&lt;/li&gt;
&lt;li&gt;한글이 깨끗하게 나오면 좋지만 영문체보다 중요하진 않다&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;개인적으로-괜찮다-생각하는-폰트-알파벳순&#34;&gt;개인적으로 괜찮다 생각하는 폰트 (알파벳순)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.microsoft.com/en-us/download/details.aspx?id=17879&#34;&gt;Consolas&lt;/a&gt; 마이크로소프트 개발.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://github.com/naver/d2codingfont&#34;&gt;D2Coding&lt;/a&gt; 네이버 개발. 다닥다닥 붙어있는 느낌. 리가쳐 지원.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://github.com/tonsky/FiraCode&#34;&gt;Fira Code&lt;/a&gt; 리가쳐가 이쁘게 나옴.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://github.com/source-foundry/Hack&#34;&gt;Hack&lt;/a&gt; 동글동글한 폰트.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/IBM/plex&#34;&gt;IBM Plex Mono&lt;/a&gt; IBM 개발. 정렬과 각을 강조.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.levien.com/type/myfonts/inconsolata.html&#34;&gt;Inconsolata&lt;/a&gt; 동글하면서도 살짝 딱딱.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://input.fontbureau.com/&#34;&gt;Input Mono&lt;/a&gt; Inconsolata보다 폭이 약간 넓고 굵음.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.jetbrains.com/lp/mono/&#34;&gt;JetBrains Mono&lt;/a&gt; 젯브레인 개발. 아래위로 긴 느낌. 리가쳐 지원.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.cufonfonts.com/font/menlo&#34;&gt;Menlo&lt;/a&gt; 애플 개발.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://myrica.estable.jp/&#34;&gt;Myrica&lt;/a&gt; 일본어 코딩용.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://github.com/adobe-fonts/source-code-pro&#34;&gt;Source Code Pro&lt;/a&gt; 어도비 개발. 글씨폭이 넓고 아래위로 납작한 편.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://design.ubuntu.com/font/&#34;&gt;Ubuntu Mono&lt;/a&gt; 캐노니컬 개발.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;폰트-확인-사이트&#34;&gt;폰트 확인 사이트&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.programmingfonts.org/&#34;&gt;Programming Fonts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://s9w.github.io/font_compare/&#34;&gt;Programming font comparison&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content:encoded>
        <dc:creator>냉동코더</dc:creator>
        
        
        
        
          
            
              <category>font</category>
            
          
            
              <category>google noto fonts</category>
            
          
            
              <category>KoPubWorld</category>
            
          
            
              <category>Naver Nanum font</category>
            
          
        
        
          
            
              <category>etc</category>
            
          
        
        
      </item>
      
      <item>
        <title>내가 사용하는 VS Code settings.json</title>
        <link>https://cliearl.github.io/posts/etc/vscode-settings-json/</link>
        <pubDate>Mon, 14 Dec 2020 15:21:53 +0900</pubDate>
        
        <atom:modified>Mon, 14 Dec 2020 15:21:53 +0900</atom:modified>
        <guid>https://cliearl.github.io/posts/etc/vscode-settings-json/</guid>
        <description>&lt;p&gt;내가 사용하는 VS Code의 settings.json 내용&lt;/p&gt;</description>
        <content:encoded>&lt;p&gt;내가 사용하는 VS Code의 settings.json 내용&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;#34;files.autoSave&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;afterDelay&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;#34;editor.fontSize&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;18&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;#34;editor.fontFamily&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#39;Fira Code&amp;#39;, &amp;#39;Noto Sans CJK KR&amp;#39;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;#34;editor.fontLigatures&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;#34;editor.renderWhitespace&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;boundary&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;#34;editor.wordWrap&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;on&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;#34;editor.wrappingIndent&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;indent&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;#34;editor.rulers&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
        &lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;mi&#34;&gt;120&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;#34;editor.formatOnSave&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;#34;git.autofetch&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;#34;git.confirmSync&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;#34;git.postCommitCommand&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;none&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;#34;python.formatting.provider&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;black&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;#34;python.languageServer&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Microsoft&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;#34;python.linting.pylintEnabled&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;#34;python.linting.pylintPath&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;pylint&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;#34;terminal.integrated.shell.windows&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\powershell.exe&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;#34;code-runner.runInTerminal&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;#34;code-runner.executorMap&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;#34;javascript&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;node&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;#34;php&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;php&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;#34;python&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;$pythonPath -u $fullFileName&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;#34;perl&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;perl&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;#34;ruby&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;ruby&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;#34;go&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;go run&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;#34;html&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;\&amp;#34;C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe\&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;#34;java&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;cd $dir &amp;amp;&amp;amp; javac $fileName &amp;amp;&amp;amp; java $fileNameWithoutExt&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;#34;c&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;cd $dir &amp;amp;&amp;amp; gcc $fileName -o $fileNameWithoutExt &amp;amp;&amp;amp; $dir$fileNameWithoutExt&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;#34;cpp&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;cd $dir &amp;amp;&amp;amp; g++ -std=c++14 $fileName -o $fileNameWithoutExt &amp;amp;&amp;amp; $dir$fileNameWithoutExt&amp;#34;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;#34;editor.suggestSelection&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;first&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;#34;vsintellicode.modify.editor.suggestSelection&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;automaticallyOverrodeDefaultValue&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</content:encoded>
        <dc:creator>냉동코더</dc:creator>
        
        
        
        
          
            
              <category>VS Code</category>
            
          
            
              <category>settings.json</category>
            
          
        
        
          
            
              <category>etc</category>
            
          
        
        
      </item>
      
      <item>
        <title>VSCODE에서 Python VirtualEnv 환경설정하기</title>
        <link>https://cliearl.github.io/posts/etc/python-virtualenv-settings/</link>
        <pubDate>Sun, 13 Dec 2020 15:37:00 +0900</pubDate>
        
        <atom:modified>Sun, 13 Dec 2020 15:37:00 +0900</atom:modified>
        <guid>https://cliearl.github.io/posts/etc/python-virtualenv-settings/</guid>
        <description>&lt;p&gt;윈도우 환경에서 VS Code에 파이썬 가상환경 설정하고 사용하는 법에 대해 정리했다.&lt;/p&gt;</description>
        <content:encoded>&lt;p&gt;윈도우 환경에서 VS Code에 파이썬 가상환경 설정하고 사용하는 법에 대해 정리했다.&lt;/p&gt;
&lt;h2 id=&#34;venv-환경-작성&#34;&gt;venv 환경 작성&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;작업폴더를 연 뒤 터미널에서 다음 값 입력&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ python3 -m venv .venv
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;상태표시줄의 파이썬을 눌러 (&#39;.venv&#39;)인 python을 선택&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;다음 명령어로 가상환경을 활성화 후 패키지 설치&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div id=&#34;f3a9b3a304650797&#34; class=&#34;codetab&#34;&gt;
  &lt;div class=&#34;codetab__links&#34;&gt;
    
      &lt;button class=&#34;codetab__link&#34; aria-label=&#34;Tab link&#34;&gt;윈도우&lt;/button&gt;
    
      &lt;button class=&#34;codetab__link&#34; aria-label=&#34;Tab link&#34;&gt;macOS&lt;/button&gt;
    
  &lt;/div&gt;
  
  
&lt;div id=&#34;9cbd968e7073faa6&#34; class=&#34;codetab__content&#34;&gt;
  &lt;pre&gt;&lt;code class=&#34;language-윈도우&#34; data-lang=&#34;윈도우&#34;&gt;.venv\\scripts\\activate
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

  
&lt;div id=&#34;b5ef03d337930b6e&#34; class=&#34;codetab__content&#34;&gt;
  &lt;pre&gt;&lt;code class=&#34;language-macOS&#34; data-lang=&#34;macOS&#34;&gt;source .venv/bin/activate
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;script&gt;
  &#39;use strict&#39;;

  var containerId = JSON.parse(&#34;\&#34;f3a9b3a304650797\&#34;&#34;);
  var containerElem = document.getElementById(containerId);
  var codetabLinks = null;
  var codetabContents = null;
  var ids = [];

  if (containerElem) {
    codetabLinks = containerElem.querySelectorAll(&#39;.codetab__link&#39;);
    codetabContents = containerElem.querySelectorAll(&#39;.codetab__content&#39;);
  }

  for (var i = 0; i &lt; codetabContents.length; i++) {
    ids = ids.concat(codetabContents[i].getAttribute(&#39;id&#39;));
    codetabContents[i].style.display = &#39;none&#39;;

    if (0 === parseInt(i, 10) &amp;&amp; !codetabContents[i].classList.contains(&#39;active&#39;)) {
      codetabContents[i].classList.add(&#39;active&#39;);
    }
  }

  for (var i = 0; i &lt; codetabLinks.length; i++) {
    codetabLinks[i].setAttribute(&#39;id&#39;, ids[i]);

    if (0 === parseInt(i, 10) &amp;&amp; !codetabLinks[i].classList.contains(&#39;active&#39;)) {
      codetabLinks[i].classList.add(&#39;active&#39;);
    } else {
      codetabLinks[i].classList.remove(&#39;active&#39;);
    }
  }

  if (codetabContents.length &gt; 0) {
    codetabContents[0].style.display = &#39;block&#39;;
  }
&lt;/script&gt;
&lt;h2 id=&#34;code-runner를-실행하기-위한-settingsjson-설정&#34;&gt;code-runner를 실행하기 위한 settings.json 설정&lt;/h2&gt;

&lt;div id=&#34;a08a452ff5480719&#34; class=&#34;codetab&#34;&gt;
  &lt;div class=&#34;codetab__links&#34;&gt;
    
      &lt;button class=&#34;codetab__link&#34; aria-label=&#34;Tab link&#34;&gt;윈도우&lt;/button&gt;
    
      &lt;button class=&#34;codetab__link&#34; aria-label=&#34;Tab link&#34;&gt;macOS&lt;/button&gt;
    
  &lt;/div&gt;
  
  
&lt;div id=&#34;b3ce59c4d122b40d&#34; class=&#34;codetab__content&#34;&gt;
  &lt;pre&gt;&lt;code class=&#34;language-윈도우&#34; data-lang=&#34;윈도우&#34;&gt;  &amp;quot;python.pythonPath&amp;quot;: &amp;quot;blahblah\\.venv\\Script\\python.exe&amp;quot;,
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

  
&lt;div id=&#34;71e90d5f5a253afd&#34; class=&#34;codetab__content&#34;&gt;
  &lt;pre&gt;&lt;code class=&#34;language-macOS&#34; data-lang=&#34;macOS&#34;&gt;  &amp;quot;python.pythonPath&amp;quot;: &amp;quot;.venv/bin/python&amp;quot;,
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;script&gt;
  &#39;use strict&#39;;

  var containerId = JSON.parse(&#34;\&#34;a08a452ff5480719\&#34;&#34;);
  var containerElem = document.getElementById(containerId);
  var codetabLinks = null;
  var codetabContents = null;
  var ids = [];

  if (containerElem) {
    codetabLinks = containerElem.querySelectorAll(&#39;.codetab__link&#39;);
    codetabContents = containerElem.querySelectorAll(&#39;.codetab__content&#39;);
  }

  for (var i = 0; i &lt; codetabContents.length; i++) {
    ids = ids.concat(codetabContents[i].getAttribute(&#39;id&#39;));
    codetabContents[i].style.display = &#39;none&#39;;

    if (0 === parseInt(i, 10) &amp;&amp; !codetabContents[i].classList.contains(&#39;active&#39;)) {
      codetabContents[i].classList.add(&#39;active&#39;);
    }
  }

  for (var i = 0; i &lt; codetabLinks.length; i++) {
    codetabLinks[i].setAttribute(&#39;id&#39;, ids[i]);

    if (0 === parseInt(i, 10) &amp;&amp; !codetabLinks[i].classList.contains(&#39;active&#39;)) {
      codetabLinks[i].classList.add(&#39;active&#39;);
    } else {
      codetabLinks[i].classList.remove(&#39;active&#39;);
    }
  }

  if (codetabContents.length &gt; 0) {
    codetabContents[0].style.display = &#39;block&#39;;
  }
&lt;/script&gt;</content:encoded>
        <dc:creator>냉동코더</dc:creator>
        
        
        
        
          
            
              <category>python</category>
            
          
            
              <category>virtualenv</category>
            
          
        
        
          
            
              <category>etc</category>
            
          
        
        
      </item>
      
      <item>
        <title>시놀로지 도커 이미지 업데이트하기</title>
        <link>https://cliearl.github.io/posts/etc/synology-docker-update/</link>
        <pubDate>Mon, 23 Nov 2020 02:55:00 +0900</pubDate>
        
        <atom:modified>Mon, 23 Nov 2020 02:55:00 +0900</atom:modified>
        <guid>https://cliearl.github.io/posts/etc/synology-docker-update/</guid>
        <description>&lt;p&gt;시놀로지에서 도커 이미지를 업데이트하는 법에 대해 정리하였다.&lt;/p&gt;</description>
        <content:encoded>&lt;p&gt;시놀로지에서 도커 이미지를 업데이트하는 법에 대해 정리하였다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;도커패널 &amp;gt; 컨테이너 &amp;gt; 업데이트할 컨테이너 선택후 [작업 -&amp;gt; 중지]&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;도커패널 &amp;gt; 레지스트리 &amp;gt; 업데이트할 이미지 찾아서 [다운로드]&lt;br /&gt;
(이전 다운로드 받은 이미지(image) 삭제 하지 않아도 됨)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;도커패널 &amp;gt; 업데이트할 컨테이너 선택후 [작업 -&amp;gt; 지우기]&lt;br /&gt;
(이전 설정은 지워지지 않음)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;도커패널 &amp;gt; 업데이트할 컨테이너 선택후 [작업 -&amp;gt; 시작점]&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content:encoded>
        <dc:creator>냉동코더</dc:creator>
        
        
        
        
          
            
              <category>synology</category>
            
          
            
              <category>docker</category>
            
          
            
              <category>update</category>
            
          
        
        
          
            
              <category>etc</category>
            
          
        
        
      </item>
      
      <item>
        <title>내가 사용하는 VS Code Extensions</title>
        <link>https://cliearl.github.io/posts/etc/vscode-extensions/</link>
        <pubDate>Tue, 20 Oct 2020 05:27:00 +0900</pubDate>
        
        <atom:modified>Tue, 20 Oct 2020 05:27:00 +0900</atom:modified>
        <guid>https://cliearl.github.io/posts/etc/vscode-extensions/</guid>
        <description>&lt;p&gt;내가 사용하는 VS Code의 extension에 대해 정리해보았다.&lt;/p&gt;</description>
        <content:encoded>&lt;p&gt;내가 사용하는 VS Code의 extension에 대해 정리해보았다.&lt;/p&gt;
&lt;h2 id=&#34;active-file-in-statusbarhttpsmarketplacevisualstudiocomitemsitemnameroscopactivefileinstatusbar&#34;&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=RoscoP.ActiveFileInStatusBar&#34;&gt;Active File In StatusBar&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;현재 편집하고 있는 파일의 위치를 상태바에 표시.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;cchttpsmarketplacevisualstudiocomitemsitemnamems-vscodecpptools&#34;&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=ms-vscode.cpptools&#34;&gt;C/C++&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C/C++ 지원&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;code-runnerhttpsmarketplacevisualstudiocomitemsitemnameformulahendrycode-runner&#34;&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=formulahendry.code-runner&#34;&gt;Code Runner&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;코드 실행을 도와줌. settings.json에 다음 내용을 추가.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;&amp;quot;code-runner.executorMap&amp;quot;: {
    &amp;quot;javascript&amp;quot;: &amp;quot;node&amp;quot;,
    &amp;quot;php&amp;quot;: &amp;quot;php&amp;quot;,
    &amp;quot;python&amp;quot;: &amp;quot;$pythonPath -u $fullFileName&amp;quot;,
    &amp;quot;perl&amp;quot;: &amp;quot;perl&amp;quot;,
    &amp;quot;ruby&amp;quot;: &amp;quot;ruby&amp;quot;,
    &amp;quot;go&amp;quot;: &amp;quot;go run&amp;quot;,
    &amp;quot;html&amp;quot;: &amp;quot;\&amp;quot;C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe\&amp;quot;&amp;quot;,
    &amp;quot;java&amp;quot;: &amp;quot;cd $dir &amp;amp;&amp;amp; javac $fileName &amp;amp;&amp;amp; java $fileNameWithoutExt&amp;quot;,
    &amp;quot;c&amp;quot;: &amp;quot;cd $dir &amp;amp;&amp;amp; gcc $fileName -o $fileNameWithoutExt &amp;amp;&amp;amp; $dir$fileNameWithoutExt&amp;quot;,
    &amp;quot;cpp&amp;quot;: &amp;quot;cd $dir &amp;amp;&amp;amp; g++ -std=c++14 $fileName -o $fileNameWithoutExt &amp;amp;&amp;amp; $dir$fileNameWithoutExt&amp;quot;
},
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;codemaphttpsmarketplacevisualstudiocomitemsitemnameoleg-shilocodemap&#34;&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=oleg-shilo.codemap&#34;&gt;CodeMap&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;탐색창에 파일 속 클래스나 함수구조를 보여줌&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;excel-viewerhttpsmarketplacevisualstudiocomitemsitemnamegrapecitygc-excelviewer&#34;&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=GrapeCity.gc-excelviewer&#34;&gt;Excel Viewer&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;View Excel spreadsheets and CSV files within Visual Studio Code workspaces.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;git-graphhttpsmarketplacevisualstudiocomitemsitemnamemhutchiegit-graph&#34;&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=mhutchie.git-graph&#34;&gt;Git Graph&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;View a Git Graph of your repository, and perform Git actions from the graph.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;indent-rainbowhttpsmarketplacevisualstudiocomitemsitemnameoderwatindent-rainbow&#34;&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=oderwat.indent-rainbow&#34;&gt;indent-rainbow&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;This extension colorizes the indentation in front of your text alternating four different colors on each step. Some may find it helpful in writing code for Nim or Python.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;kotlin-languagehttpsmarketplacevisualstudiocomitemsitemnamemathiasfrohlichkotlin&#34;&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=mathiasfrohlich.Kotlin&#34;&gt;Kotlin Language&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Kotlin language support for VS Code&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;latex-workshophttpsmarketplacevisualstudiocomitemsitemnamejames-yulatex-workshop&#34;&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=James-Yu.latex-workshop&#34;&gt;LaTeX Workshop&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Boost LaTeX typesetting efficiency with preview, compile, autocomplete, colorize, and more.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;maintained-swift-development-environmenthttpsmarketplacevisualstudiocomitemsitemnamevknabelvscode-swift-development-environmentampssrfalseoverview&#34;&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=vknabel.vscode-swift-development-environment&amp;amp;ssr=false#overview&#34;&gt;Maintained Swift Development Environment&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;New home of Swift Development Environment for VS Code&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;markdown-all-in-onehttpsmarketplacevisualstudiocomitemsitemnameyzhangmarkdown-all-in-one&#34;&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=yzhang.markdown-all-in-one&#34;&gt;Markdown All in One&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;All you need to write Markdown (keyboard shortcuts, table of contents, auto preview and more)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;plantumlhttpsmarketplacevisualstudiocomitemsitemnamejebbsplantuml&#34;&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=jebbs.plantuml&#34;&gt;PlantUML&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Rich PlantUML support for Visual Studio Code.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;path-autocompletehttpsmarketplacevisualstudiocomitemsitemnameionutvmipath-autocomplete&#34;&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=ionutvmi.path-autocomplete&#34;&gt;Path Autocomplete&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Provides path completion for visual studio code.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;pythonhttpsmarketplacevisualstudiocomitemsitemnamems-pythonpython&#34;&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=ms-python.python&#34;&gt;Python&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;A Visual Studio Code extension with rich support for the Python language (for all actively supported versions of the language: 2.7, &amp;gt;=3.4), including features such as linting, debugging, IntelliSense, code navigation, code formatting, refactoring, unit tests, snippets, and more!&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;settings-synchttpsmarketplacevisualstudiocomitemsitemnameshancode-settings-sync&#34;&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=Shan.code-settings-sync&#34;&gt;Settings Sync&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Synchronize Settings, Snippets, Themes, File Icons, Launch, Keybindings, Workspaces and Extensions Across Multiple Machines Using GitHub Gist.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;todo-treehttpsmarketplacevisualstudiocomitemsitemnamegruntfugglytodo-tree&#34;&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=Gruntfuggly.todo-tree&#34;&gt;Todo Tree&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Show TODO, FIXME, etc. comment tags in a tree view&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;visual-studio-intellicodehttpsmarketplacevisualstudiocomitemsitemnamevisualstudioexptteamvscodeintellicode&#34;&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=VisualStudioExptTeam.vscodeintellicode&#34;&gt;Visual Studio IntelliCode&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;AI-assisted development&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;vscode-iconshttpsmarketplacevisualstudiocomitemsitemnamerobertohuertasmvscode-icons&#34;&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=robertohuertasm.vscode-icons&#34;&gt;vscode-icons&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Icons for Visual Studio Code&lt;/li&gt;
&lt;/ul&gt;</content:encoded>
        <dc:creator>냉동코더</dc:creator>
        
        
        
        
          
            
              <category>VS Code</category>
            
          
            
              <category>extension</category>
            
          
            
              <category>plugin</category>
            
          
        
        
          
            
              <category>etc</category>
            
          
        
        
      </item>
      
      <item>
        <title>도커로 Hexo 블로그 만들고 github.io 주소로 접속하기</title>
        <link>https://cliearl.github.io/posts/etc/docker-hexo-blog/</link>
        <pubDate>Fri, 09 Oct 2020 19:24:00 +0900</pubDate>
        
        <atom:modified>Fri, 09 Oct 2020 19:24:00 +0900</atom:modified>
        <guid>https://cliearl.github.io/posts/etc/docker-hexo-blog/</guid>
        <description>&lt;p&gt;도커로 Hexo 블로그를 만들고 github.io 주소로 접속하도록 해 보았다.&lt;/p&gt;</description>
        <content:encoded>&lt;p&gt;도커로 Hexo 블로그를 만들고 github.io 주소로 접속하도록 해 보았다.&lt;/p&gt;
&lt;p&gt;개인적으로 사용하고 있는 텍큐 블로그가 있는데 기술관련 내용을 쓰기는 너무 불편하고 오래되기도 해서 마크다운으로 사용할 수 있는 블로그 툴을 찾아봤다.&lt;/p&gt;
&lt;p&gt;처음엔 입출력 속도만 개선해보려고 PHP 버전을 5.6에서 7.3으로 올려봤는데 텍큐가 너무 오래되다보니 패치를 해도 잘 안돌아가고 해서 v7로 올리는 건 포기.&lt;/p&gt;
&lt;p&gt;그 다음으로는 업뎃 잘되는 워드프레스에 텍스트큐브의 블로그 내용을 다 옮기고 기술내용도 거기서 다 같이 쓸려고 했다.&lt;br /&gt;
그래서 &lt;a href=&#34;https://ani2life.com/wp/?p=898&#34;&gt;TTXML Importer&lt;/a&gt;로 데이터를 옮겨봤는데 글만 옮겨지고 그외 카운터 정보같은건 옮길 수가 없었다.&lt;/p&gt;
&lt;p&gt;어차피 블로그를 깔끔하게 옮길 수 없다면 기술블로그 전용 툴을 쓰자 해서 찾은게 &lt;a href=&#34;https://ghost.org/&#34;&gt;Ghost&lt;/a&gt;인데 얘는 카테고리나 사이드바 기능이 부족해서 탈락시켰다.&lt;/p&gt;
&lt;p&gt;그 다음으로 찾은 선택지는 정적 사이트 생성기를 이용하는 거였다. 마크다운 쓰기도 좋고, github.io 주소도 사용할 수 있으니 괜찮아보였다. 그래서 찾아보니 &lt;a href=&#34;https://jekyllrb.com/&#34;&gt;Jekyll&lt;/a&gt;에는 맘에 드는 스킨이 없어서 &lt;a href=&#34;https://hexo.io/ko/index.html&#34;&gt;Hexo&lt;/a&gt;에 &lt;a href=&#34;https://blog.zhangruipeng.me/hexo-theme-icarus/&#34;&gt;Icarus&lt;/a&gt;라는 테마를 붙여 써보기로 했다.&lt;/p&gt;
&lt;p&gt;근데 정적 사이트 생성기는 소스를 로컬에 보관하고 github.io로 퍼블리시하는 구조라, 모든 컴퓨터에 Hexo 소스를 보관할 필요가 있다. 이건 너무 바보같아서 Hexo 소스는 도커로 웹에 띄우고 이놈으로부터 github.io에 퍼블리싱하는 방법을 쓰기로 했다. 굳이 따지면 웹에 띄운 시점에서 바로 접속이 가능하니 굳이 퍼블리시를 할 필요는 없는거긴 한데 사이트를 매번 변환하는것보다는 당연히 변환된 저장소에 접속하는 편이 빠르고 무엇보다 github.io 주소를 쓰는 편이 더 geek하기 때문에 사용하기로 했다.&lt;/p&gt;
&lt;p&gt;그래서 이 포스트에서는 리눅스 서버에 도커로 Hexo를 띄우고, Hexo-admin 플러그인으로 퍼블리시한 파일을 github.io에 deploy하여 최종적으로는 유저명.github.io로 정적 블로그를 구축하는 법을 설명한다.&lt;/p&gt;
&lt;h1 id=&#34;github-repository-생성&#34;&gt;github repository 생성&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.github.com/en/free-pro-team@latest/github/working-with-github-pages/creating-a-github-pages-site&#34;&gt;https://docs.github.com/en/free-pro-team@latest/github/working-with-github-pages/creating-a-github-pages-site&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;깃헙에 유저명.github.io라는 저장소 생성&lt;/li&gt;
&lt;li&gt;이때 속성은 Public, Initialize this repository with a README를 선택&lt;/li&gt;
&lt;li&gt;생성된 저장소의 settings → GitHub Pages → Theme Chooser 에서 테마를 아무거나 하나 골라주면 블로그가 가동됨&lt;/li&gt;
&lt;li&gt;Your site is published at https://유저명.github.io/ 메시지가 뜨면 접속가능하게 된거임&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;도커-이미지-선정&#34;&gt;도커 이미지 선정&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spurin/docker-hexo&#34;&gt;https://github.com/spurin/docker-hexo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Hexo와 관리용 Hexo-admin이 포함되어 있는 이미지&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;icarus-테마-셋업&#34;&gt;icarus 테마 셋업&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# ssh로 접속&lt;/span&gt;
sudo su -
docker ps  &lt;span class=&#34;c1&#34;&gt;# 현재 실행중인 컨테이너 확인&lt;/span&gt;
docker &lt;span class=&#34;nb&#34;&gt;exec&lt;/span&gt; -it xxxxxxxxxxxx /bin/bash  &lt;span class=&#34;c1&#34;&gt;# 컨테이너에 접속&lt;/span&gt;
git clone https://github.com/ppoffice/hexo-theme-icarus.git themes/icarus
&lt;span class=&#34;c1&#34;&gt;# 테마 의존성 패키지 일괄설치&lt;/span&gt;
npm install --save bulma-stylus@0.8.0 hexo-renderer-inferno@^0.1.3 hexo-component-inferno@^0.10.1 inferno@^7.3.3 inferno-create-element@^7.3.3
&lt;span class=&#34;c1&#34;&gt;# _config.yml의 theme가 landscape인데 icarus로 수정&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;hexo-admin에-패스워드-설정&#34;&gt;hexo-admin에 패스워드 설정&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Settings &amp;gt; Setup authentification에서 YAML을 생성&lt;/li&gt;
&lt;li&gt;_config.yml의 admin: 밑에 붙여넣는다&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;hexo-admin에서-deploy-설정&#34;&gt;hexo-admin에서 deploy 설정&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jaredly/hexo-admin/issues/70&#34;&gt;https://github.com/jaredly/hexo-admin/issues/70&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;sh파일을 만들고 yml 파일을 수정한다&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;npm install --save hexo-deployer-git  &lt;span class=&#34;c1&#34;&gt;# git 배포용 플러그인 설치&lt;/span&gt;
touch hexo-deploy.sh&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; chmod a+x hexo-deploy.sh
&lt;span class=&#34;c1&#34;&gt;#!/usr/bin/env sh&lt;/span&gt;
hexo clean
hexo deploy

 &lt;span class=&#34;c1&#34;&gt;# _config.yml을 수정&lt;/span&gt;
 deploy:
  type: git
  repo: https://계정:패스워드@github.com/저장소.git
 admin:
  deployCommand: &lt;span class=&#34;s1&#34;&gt;&amp;#39;./hexo-deploy.sh&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;유용한-플러그인httpshexoioplugins&#34;&gt;&lt;a href=&#34;https://hexo.io/plugins/&#34;&gt;유용한 플러그인&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&#34;hexo-deployer-githttpsgithubcomhexojshexo-deployer-git&#34;&gt;&lt;a href=&#34;https://github.com/hexojs/hexo-deployer-git&#34;&gt;hexo-deployer-git&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;git으로 배포하기 위한 플러그인&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 설치&lt;/span&gt;
npm install hexo-deployer-git --save
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;hexo-generator-feedhttpsgithubcomhexojshexo-generator-feed&#34;&gt;&lt;a href=&#34;https://github.com/hexojs/hexo-generator-feed&#34;&gt;hexo-generator-feed&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;atom(url/atom.xml ) 혹은 rss2.0(url/rss2.xml)으로 피드 생성해 줌&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 설치&lt;/span&gt;
npm install hexo-generator-feed --save

&lt;span class=&#34;c1&#34;&gt;# _config.yml 파일 끝에 다음 행 추가&lt;/span&gt;
feed:
  enable: &lt;span class=&#34;nb&#34;&gt;true&lt;/span&gt;
  type: rss2
  path: rss2.xml
  limit: &lt;span class=&#34;m&#34;&gt;20&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;hexo-generator-sitemaphttpsgithubcomhexojshexo-generator-sitemap&#34;&gt;&lt;a href=&#34;https://github.com/hexojs/hexo-generator-sitemap&#34;&gt;hexo-generator-sitemap&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;sitemap.xml 파일을 자동생성&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 설치&lt;/span&gt;
npm install hexo-generator-sitemap --save

&lt;span class=&#34;c1&#34;&gt;# _config.yml 파일 맨 끝에 다음 행 추가&lt;/span&gt;
sitemap:
  path: sitemap.xml
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;hexo-mathhttpsgithubcomhexojshexo-math&#34;&gt;&lt;a href=&#34;https://github.com/hexojs/hexo-math&#34;&gt;hexo-math&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;KaTeX and MathJax를 활성화 시켜주는 플러그인&lt;/li&gt;
&lt;li&gt;플러그인 설치&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 설치&lt;/span&gt;
npm install hexo-math --save
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;사용예&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;% mathjax %}
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;\frac&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;1&lt;span class=&#34;nb&#34;&gt;}{&lt;/span&gt;x&lt;span class=&#34;nb&#34;&gt;^&lt;/span&gt;2-1&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;% endmathjax %}
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</content:encoded>
        <dc:creator>냉동코더</dc:creator>
        
        
        
        
          
            
              <category>docker</category>
            
          
            
              <category>hexo</category>
            
          
            
              <category>github.io</category>
            
          
            
              <category>blog</category>
            
          
        
        
          
            
              <category>etc</category>
            
          
        
        
      </item>
      

    
  </channel>
</rss>