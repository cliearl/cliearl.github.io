<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 냉동코더의 기술블로그</title>
    <link>https://cliearl.github.io/posts/</link>
    <description>Recent content in Posts on 냉동코더의 기술블로그</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 09 Oct 2021 17:45:11 +0900</lastBuildDate><atom:link href="https://cliearl.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Postgresql Docker Image의 메이저 버전 업그레이드</title>
      <link>https://cliearl.github.io/posts/linux/postgresql-docker-upgrade/</link>
      <pubDate>Sat, 09 Oct 2021 17:45:11 +0900</pubDate>
      
      <guid>https://cliearl.github.io/posts/linux/postgresql-docker-upgrade/</guid>
      <description>Docker로 Postgresql의 12버전을 사용하고 있었는데 2021-09-30부로 14버전이 발표됐다. 이젠 12를 버리고 13으로 가야겠다 싶어 업그레이드 방법을 정리한다.
Postgresql Version Postgresql 메이저 버전은 최근것만 정리하면 다음과 같다.
   Release First release Latest minor version Latest release End of life Milestones     11 2018-10-18 11.13 2021-08-12 2023-11-09 Increased robustness and performance for partitioning, transactions supported in stored procedures, enhanced abilities for query parallelism, just-in-time (JIT) compiling for expressions   12 2019-10-03 12.</description>
    </item>
    
    <item>
      <title>2021년 개발관련 컨퍼런스 리스트</title>
      <link>https://cliearl.github.io/posts/conferences/2021/</link>
      <pubDate>Sat, 02 Oct 2021 11:35:27 +0900</pubDate>
      
      <guid>https://cliearl.github.io/posts/conferences/2021/</guid>
      <description>Language and OS Pycon https://pycon.org/
 PyCon US 2021  droidcon https://www.droidcon.com/
DroidKnights https://sites.google.com/view/dk21/
 DroidKnights 2021  DroidKaigi https://droidkaigi.jp/2021/
iOSDC Japan https://iosdc.jp/2021/
 iOSDC Japan 2021  Company &amp;amp; Community Apple Worldwide Developers Conference (WWDC) https://developer.apple.com/wwdc21/
 WWDC21 Videos  AWS re:Invent https://reinvent.awsevents.com/
AWS Summit Online Korea https://aws.amazon.com/ko/events/summits/online/korea/
 AWS Summit Online Korea 2021  CEDEC https://cedec.cesa.or.jp/
 CEDEC2021【1日目】 CEDEC2021【2日目】 CEDEC2021【3日目】 【CEDEC2021】　～日本最大にして世界的なゲーム開発者会議～  CES https://www.ces.tech/
 LIVE at CES 2021 CES 2021 Recaps  Dell Technologies World https://www.</description>
    </item>
    
    <item>
      <title>2019 카카오 신입 공채 1차 코딩 테스트 Swift 풀이</title>
      <link>https://cliearl.github.io/posts/coding-test/2019-kakao-1st-swift/</link>
      <pubDate>Sat, 02 Oct 2021 00:25:28 +0900</pubDate>
      
      <guid>https://cliearl.github.io/posts/coding-test/2019-kakao-1st-swift/</guid>
      <description>문제 해설 http://tech.kakao.com/2018/09/21/kakao-blind-recruitment-for2019-round-1/
오픈채팅방 https://www.welcomekakao.com/learn/courses/30/lessons/42888
import Foundation func solution(_ record:[String]) -&amp;gt; [String] { var answer = [String]() var userList = [String : String]() var chatLog = [[String]]() let enterMsg = &amp;#34;님이 들어왔습니다.&amp;#34; let leaveMsg = &amp;#34;님이 나갔습니다.&amp;#34; // chatLog 작성 for info in record { let splitInfo = info.components(separatedBy: &amp;#34; &amp;#34;) if splitInfo[0] == &amp;#34;Enter&amp;#34; { userList[splitInfo[1]] = splitInfo[2] chatLog.append([splitInfo[1], enterMsg]) } else if splitInfo[0] == &amp;#34;Leave&amp;#34; { chatLog.append([splitInfo[1], leaveMsg]) } else if splitInfo[0] == &amp;#34;Change&amp;#34; { userList[splitInfo[1]] = splitInfo[2] } } // 최종 answer 작성 for log in chatLog { answer.</description>
    </item>
    
    <item>
      <title>2018 카카오 신입 공채 3차 코딩 테스트 Swift 풀이</title>
      <link>https://cliearl.github.io/posts/coding-test/2018-kakao-3rd-swift/</link>
      <pubDate>Sat, 02 Oct 2021 00:21:01 +0900</pubDate>
      
      <guid>https://cliearl.github.io/posts/coding-test/2018-kakao-3rd-swift/</guid>
      <description>문제 해설 https://tech.kakao.com/2017/11/14/kakao-blind-recruitment-round-3/
N진수 게임 https://www.welcomekakao.com/learn/courses/30/lessons/17687
import Foundation // 진법변환 func convertBase(n: Int, base: Int) -&amp;gt; String { if n == 0 { return &amp;#34;0&amp;#34; } let list = [&amp;#34;0&amp;#34;, &amp;#34;1&amp;#34;, &amp;#34;2&amp;#34;, &amp;#34;3&amp;#34;, &amp;#34;4&amp;#34;, &amp;#34;5&amp;#34;, &amp;#34;6&amp;#34;, &amp;#34;7&amp;#34;, &amp;#34;8&amp;#34;, &amp;#34;9&amp;#34;, &amp;#34;A&amp;#34;, &amp;#34;B&amp;#34;, &amp;#34;C&amp;#34;, &amp;#34;D&amp;#34;, &amp;#34;E&amp;#34;, &amp;#34;F&amp;#34;] var answer = [String]() var quotient = n // 몫 var remainder = 0 // 나머지 // 몫이 0이 될 때까지 n을 base로 계속 나누고 튀어나오는 나머지값을 역순으로 배치 while (quotient &amp;gt; 0) { remainder = quotient % base quotient = quotient / base answer.</description>
    </item>
    
    <item>
      <title>2018 카카오 신입 공채 1차 코딩 테스트 Swift 답안</title>
      <link>https://cliearl.github.io/posts/coding-test/2018-kakao-1st-swift/</link>
      <pubDate>Sat, 02 Oct 2021 00:11:53 +0900</pubDate>
      
      <guid>https://cliearl.github.io/posts/coding-test/2018-kakao-1st-swift/</guid>
      <description>문제해설 http://tech.kakao.com/2017/09/27/kakao-blind-recruitment-round-1/
비밀지도 (비트연산) https://www.welcomekakao.com/learn/courses/30/lessons/17681
func solution(_ n:Int, _ arr1:[Int], _ arr2:[Int]) -&amp;gt; [String] { var answer = [String](repeating: &amp;#34;&amp;#34;, count: n) var bitAdded = Array&amp;lt;Int&amp;gt;() for i in 0..&amp;lt;n { bitAdded.append(arr1[i] | arr2[i]) } for i in 0..&amp;lt;n { for _ in 0..&amp;lt;n { // 2진수로 변환한 값의 맨 뒷자리가 튀어나온다 // 그걸 반환배열의 맨 앞으로 넣어준다 answer[i].insert(bitAdded[i] % 2 == 1 ? &amp;#34;#&amp;#34; : &amp;#34; &amp;#34;, at: answer[i].startIndex) // 비트를 오른쪽으로 하나 옮김 bitAdded[i] &amp;gt;&amp;gt;= 1 } } return answer } 다트 게임 (정규표현식) https://www.</description>
    </item>
    
    <item>
      <title>SQLite 이해하고 SQLiteOpenHelper로 CRUD 구현하기</title>
      <link>https://cliearl.github.io/posts/android/implement-crud-with-sqliteopenhelper/</link>
      <pubDate>Sat, 25 Sep 2021 17:33:35 +0900</pubDate>
      
      <guid>https://cliearl.github.io/posts/android/implement-crud-with-sqliteopenhelper/</guid>
      <description>이번 포스팅에서는 두 파트에 걸쳐 안드로이드에서 SQLite를 다루는 법에 대해 알아보도록 하겠습니다.
Part A. 데이터베이스 관계형 데이터베이스 여러 사람들의 연락처 데이터는 다음과 같이 테이블 구조로 관리할 수 있습니다. 이런 식으로 통일된 규칙의 데이터를 관리할 수 있는 테이블을 데이터베이스라고 합니다.
   순서 이름 전화번호 이메일 주소     0 김철수 010-1111-1111 kim@abc.com 서울   1 이영희 010-2222-2222 lee@abc.com 서울   2 박모모 010-3333-3333 park@abc.com 인천    이 때 1행 2열의 이름을 Key라고 하고 2행 2열의 김철수를 Value라고 합니다.</description>
    </item>
    
    <item>
      <title>Github Profile Page 꾸미기</title>
      <link>https://cliearl.github.io/posts/etc/customize-github-profile/</link>
      <pubDate>Tue, 07 Sep 2021 18:39:09 +0900</pubDate>
      
      <guid>https://cliearl.github.io/posts/etc/customize-github-profile/</guid>
      <description>Github에는 다음과 같이 프로필 페이지를 설정할 수 있는 기능이 있습니다.
 
프로필 페이지 생성 프로필 페이지를 설정하기 위해서는
 내 github ID와 동일한 이름의 저장소를 만들고,   
 public으로 설정한 뒤,   
 README.md 파일을 생성해줍니다.   
그러면 github이 README.md를 특별히 프로필 페이지로 인식해 주므로 카와이하게 별모양으로 수정하시면 됩니다.
 
GitHub 사용통계 표시 GitHub Readme Stats를 사용하면 나의 Github 활동 통계를 다음과 같이 카드로 볼 수 있습니다.</description>
    </item>
    
    <item>
      <title>알기쉬운 Singleton Pattern</title>
      <link>https://cliearl.github.io/posts/android/understanding-singleton-pattern/</link>
      <pubDate>Sun, 05 Sep 2021 15:59:57 +0900</pubDate>
      
      <guid>https://cliearl.github.io/posts/android/understanding-singleton-pattern/</guid>
      <description>이번 포스팅에서는 싱글톤 패턴에 대해 알아보도록 하겠습니다.
Singleton 이란 싱글톤(Singleton)은 소프트웨어 디자인패턴의 한 종류로, 프로그램 안에서 클래스의 인스턴스가 단 하나만 존재해야 할 때 사용합니다. 예를들어 데이터베이스를 변경할 수 있는 DBHandler 클래스의 인스턴스가 두개 있어서 동시에 데이터베이스에 접근한다면 문제가 생기겠죠.
자바에서는 일반적으로 다음과 같은 방식으로 싱글톤을 구현할 수 있습니다. private를 이용해 외부에서 생성자에 접근하지 못하도록 막고 getInstance를 통해야 인스턴스를 만들 수 있게 합니다. 이 때 스태틱 instance를 확인해서 인스턴스가 없으면 객체를 새로 만들고, 있다면 그대로 반환해주는 구조를 가집니다.</description>
    </item>
    
    <item>
      <title>2020년 개발관련 컨퍼런스 리스트</title>
      <link>https://cliearl.github.io/posts/conferences/2020/</link>
      <pubDate>Fri, 20 Aug 2021 22:48:02 +0900</pubDate>
      
      <guid>https://cliearl.github.io/posts/conferences/2020/</guid>
      <description>Language and OS CppCon https://cppcon.org/program2020/
 CppCon 2020  JSConf https://jsconf.com/ https://2020.jsconf.kr/ko
 JSConf Korea 2020 Home Edition  KotlinConf  https://kotlinconf.com/  Kotlin Fest  https://twitter.com/kotlin_fest  Let&amp;rsquo;Swift  http://letswift.kr/ Let&amp;rsquo;Swift 20  Oracle Code One  https://www.oracle.com/code-one/  Pycon https://pycon.org/ https://www.pycon.kr/2020
 PyCon US 2020 PyCon.KR 2020 PyCon Japan 2020  try! Swift https://www.tryswift.co/
droidcon https://www.droidcon.com/
 droidcon Italy 2020  DroidKaigi https://droidkaigi.jp/2020/
 DroidKaigi 2020  DroidKnights https://droidknights.</description>
    </item>
    
    <item>
      <title>2019년 개발관련 컨퍼런스 리스트</title>
      <link>https://cliearl.github.io/posts/conferences/2019/</link>
      <pubDate>Fri, 20 Aug 2021 22:40:32 +0900</pubDate>
      
      <guid>https://cliearl.github.io/posts/conferences/2019/</guid>
      <description>Consumer Electronics Show (CES)
 1/7 ~ 1/10 http://www.ces.tech/ Las Vegas Convention Center, Nevada Youtube    Free and Open source Software Developers&#39; European Meeting (FOSDEM)
 2/2 ~ 2/3 http://fosdem.org/2019/ ULB Solbosch Campus, Brussels Youtube    DeveloperWeek
 2/19 ~ 2/24 http://www.developerweek.com/ Oakland Convention Center, California Youtube    Game Developers Conference (GDC)
 3/18 ~ 3/22 http://gdconf.com/ Moscone Center, California Youtube    iOSCon</description>
    </item>
    
    <item>
      <title>Android Studio Arctic Fox와 JDK 11의 도입</title>
      <link>https://cliearl.github.io/posts/android/android-gradle-java-11/</link>
      <pubDate>Sun, 15 Aug 2021 14:23:23 +0900</pubDate>
      
      <guid>https://cliearl.github.io/posts/android/android-gradle-java-11/</guid>
      <description>이번 포스팅에서는 Android Studio Arctic Fox와 JDK 11의 도입에 관한 내용을 다루어보도록 하겠습니다.
Android Gradle 7.0.0 도입  
2021년 7월 말에 Android Studio의 버전이 Arctic Fox|2020.3.1 로 올라갔습니다. 그 과정에서 Android Gradle plugin의 버전도 4.2.0에서 7.0.0으로 올라갔는데요, Android Gradle 7.0.0의 사양은 다음과 같습니다.
    Default Version     Gradle 7.0.2   SDK Build Tools 30.0.2   NDK 21.4.7075529   JDK 11    이번 플러그인의 가장 큰 변화중 하나는 디폴트 JDK 버전을 1.</description>
    </item>
    
    <item>
      <title>jsoup으로 로또 홈페이지의 당첨번호 파싱하기</title>
      <link>https://cliearl.github.io/posts/android/jsoup-lotto-checker/</link>
      <pubDate>Sat, 14 Aug 2021 11:03:31 +0900</pubDate>
      
      <guid>https://cliearl.github.io/posts/android/jsoup-lotto-checker/</guid>
      <description>이번 포스팅에서는 jsoup을 이용해서 html을 파싱하는 법에 대해 알아보도록 하겠습니다.
jsoup이란 jsoup은 html을 파싱하기 위해 만들어진 오픈소스 자바 라이브러리입니다. 웹페이지를 HTML5 DOM으로 변환하여 요소들을 간편하게 추출할 수 있습니다. 자바 라이브러리이니만큼 코틀린에서도 자유롭게 사용이 가능하지요.
jsoup에는 여러가지 클래스가 있는데 그 중 제 생각에 중요한 것들만 정리하면 다음과 같습니다.
   클래스 설명     Document jsoup로 얻어온 html 문서   Element 데이터를 추출할 수 있는 개별 html 요소   Elements Iterable한 Element 집합의 자료형   Connection http 접속에 관련한 메소드를 가지는 클래스    파싱할 html 구조 확인 그럼 코루틴으로 로또번호 당첨 확인하기 강의에서 만들었던 코루틴으로 로또번호 당첨을 확인하는 앱에 jsoup을 적용해보도록 하겠습니다.</description>
    </item>
    
    <item>
      <title>DiffUtil과 ListAdapter 이해하고 RecyclerView에 적용하기</title>
      <link>https://cliearl.github.io/posts/android/recyclerview-listadapter/</link>
      <pubDate>Sat, 31 Jul 2021 21:22:17 +0900</pubDate>
      
      <guid>https://cliearl.github.io/posts/android/recyclerview-listadapter/</guid>
      <description>&lt;p&gt;이번 포스팅에서는 RecyclerView에 ListAdapter를 적용하는 법에 대해 알아보도록 하겠습니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>내가 Android Studio에서 사용하는 Plugins</title>
      <link>https://cliearl.github.io/posts/android/android-studio-plugins/</link>
      <pubDate>Sun, 25 Jul 2021 09:13:13 +0900</pubDate>
      
      <guid>https://cliearl.github.io/posts/android/android-studio-plugins/</guid>
      <description>이번 포스팅에서는 제가 즐겨 사용하는 Android Studio의 플러그인을 소개해 보도록 하겠습니다.
ADB Wi-Fi  https://plugins.jetbrains.com/plugin/14969-adb-wi-fi 개발장비와 모바일기기는 Android Debug Bridge(ADB)를 통해 USB나 Wifi로 연결할 수 있는데요, ADB Wi-Fi는 Wifi를 통한 ADB연결을 간편하게 수행해줍니다  CodeGlance  https://plugins.jetbrains.com/plugin/7275-codeglance Sublime text처럼 에디터 오른쪽에 코드 미니맵을 표시해줍니다  CPU Usage Indicator  https://plugins.jetbrains.com/plugin/8580-cpu-usage-indicator 스테이터스바에 IDE와 전체 시스템의 CPU 사용량을 표시합니다  CSV  https://plugins.jetbrains.com/plugin/10037-csv CSV 파일을 테이블 형식으로 열람하고 편집할 수 있게 해 줍니다  GitToolBox  https://plugins.</description>
    </item>
    
    <item>
      <title>2021년 7월 현재, minSdkVersion 몇으로 해야 할까?</title>
      <link>https://cliearl.github.io/posts/android/how-much-minsdkversion/</link>
      <pubDate>Mon, 19 Jul 2021 18:39:10 +0900</pubDate>
      
      <guid>https://cliearl.github.io/posts/android/how-much-minsdkversion/</guid>
      <description>&lt;p&gt;minSdkVersion 과연 몇으로 해야할지 정해드립니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>프로그래머스 모의테스트 Swift 풀이</title>
      <link>https://cliearl.github.io/posts/coding-test/programmers-mocktest/</link>
      <pubDate>Sat, 17 Jul 2021 16:01:16 +0900</pubDate>
      
      <guid>https://cliearl.github.io/posts/coding-test/programmers-mocktest/</guid>
      <description>문제출처 : 프로그래머스 모의테스트 페이지 https://programmers.co.kr/learn/courses/18
파트1. 자릿수 더하기 문제 https://programmers.co.kr/learn/courses/18/lessons/1876
import Foundation func solution(_ n:Int) -&amp;gt; Int { var answer:Int = 0 let input = String(n) for c in input { answer += Int(String(c))! } // 또는 // answer = input.map({ Int(String($0))! }).reduce(0) { $0 + $1 } return answer } 파트2. 순열 검사 문제 https://programmers.co.kr/learn/courses/18/lessons/1877
import Foundation func solution(_ arr:[Int]) -&amp;gt; Bool { var answer = true // 빠른 탐색을 위해 배열을 정렬 let newArr = arr.</description>
    </item>
    
    <item>
      <title>코루틴으로 로또번호 당첨 확인하기</title>
      <link>https://cliearl.github.io/posts/android/lotto-checker/</link>
      <pubDate>Sat, 17 Jul 2021 16:01:01 +0900</pubDate>
      
      <guid>https://cliearl.github.io/posts/android/lotto-checker/</guid>
      <description>이번 포스팅에서는 코루틴을 사용해서 로또번호의 당첨을 확인하는 법에 대해 알아보도록 하겠습니다.
당첨번호 조회하기 이전에 로또번호 생성기 만들기강의에서 로또번호를 생성하는 앱을 만들어보았는데요, 여기서는 이 앱에 코루틴을 이용해서 당첨여부를 확인하는 기능을 추가하도록 하겠습니다. 코루틴에 대한 이론설명은 알기쉬운 코루틴 이론 강의를 참조하시기 바랍니다.
금주의 로또 당첨번호는 동행복권 홈페이지에서 확인할 수 있습니다. 다른 회차의 당첨번호는 홈페이지의 회차별 당첨번호 페이지에서 확인할 수 있게 되어 있습니다.
그런데 이렇게 홈페이지에 접속하지 않고도 당첨번호는 API로 조회할 수 있습니다. 다음 주소의 &amp;ldquo;회차&amp;quot;라고 되어 있는 부분에 확인하고 싶은 회차의 숫자를 넣으시면 됩니다.</description>
    </item>
    
    <item>
      <title>작업용 폰트 정보 정리</title>
      <link>https://cliearl.github.io/posts/etc/fonts-for-work/</link>
      <pubDate>Fri, 16 Jul 2021 02:39:00 +0900</pubDate>
      
      <guid>https://cliearl.github.io/posts/etc/fonts-for-work/</guid>
      <description>작업환경에서 사용하는 폰트에 대하여 정리해 보았다.
텍스트 에디터용 폰트 메모장, 워드, 파워포인트, 한글 등에서 한국어, 영어, 일본어를 모두 표시할 수 있는 폰트가 필요하다.
Google Noto Fonts   어도비와 구글이 합작하여 본고딕이라는 폰트를 출시했다. https://blog.typekit.com/alternate/source-han-sans-kor/
  이 폰트는 구글에서 Noto Fonts라는 이름으로 풀었다.
  다운로드 https://www.google.com/get/noto/help/cjk/
  KoPubWorld  한국출판인회의에서 전자출판에 특화된 서체를 풀었다. 다운로드 http://www.kopus.org/Biz/electronic/Font.aspx  네이버 나눔폰트  네이버에서 나눔시리즈 폰트를 풀었다. 다운로드 https://hangeul.naver.com/2017/nanum  코딩용 폰트 코딩용 폰트에 요구되는 사항들</description>
    </item>
    
    <item>
      <title>알기쉬운 코루틴 이론</title>
      <link>https://cliearl.github.io/posts/android/coroutine-principle/</link>
      <pubDate>Mon, 28 Jun 2021 22:01:50 +0900</pubDate>
      
      <guid>https://cliearl.github.io/posts/android/coroutine-principle/</guid>
      <description>&lt;p&gt;이번 포스팅에서는 코틀린의 코루틴(Coroutine)에 대해 알아보도록 하겠습니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>로또번호 생성기 만들기</title>
      <link>https://cliearl.github.io/posts/android/lotto-generator/</link>
      <pubDate>Sun, 20 Jun 2021 21:10:32 +0900</pubDate>
      
      <guid>https://cliearl.github.io/posts/android/lotto-generator/</guid>
      <description>&lt;p&gt;이번 포스팅에서는 로또번호를 생성하는 간단한 앱을 만들어보도록 하겠습니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>단말의 인터넷 연결상태 체크하기</title>
      <link>https://cliearl.github.io/posts/android/check-connection/</link>
      <pubDate>Sun, 13 Jun 2021 21:51:49 +0900</pubDate>
      
      <guid>https://cliearl.github.io/posts/android/check-connection/</guid>
      <description>&lt;p&gt;이번 포스팅에서는 단말의 인터넷 연결상태를 체크하는 법에 대해 알아보도록 하겠습니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>전자책 관리 앱 Calibre-web 도입</title>
      <link>https://cliearl.github.io/posts/linux/introduce-calibre-web/</link>
      <pubDate>Fri, 11 Jun 2021 20:55:40 +0900</pubDate>
      
      <guid>https://cliearl.github.io/posts/linux/introduce-calibre-web/</guid>
      <description>전자책을 관리해야 할 필요성이 생겨서 셀프호스팅 가능한 오픈소스 앱을 알아봤다.
전자책 프로젝트 중 현재 활발하게 업데이트 되는 프로젝트는 다음 세개 정도 되는것 같았다.
 Calibre Ubooquity Komga  그런데 이 중 Ubooquity와 Komga는 일반서적보다는 만화책 관리가 더 메인인 것 같아서 Calibre를 선택했다.
캘리버를 도커에 띄우기 위한 이미지가 여러가지 있는데 linuxserver.io에서 관리하는 훌륭한 linuxserver/calibre-web 이미지가 있어서 그걸 사용하기로 했다.
캘리버-웹 설치시 문제가 하나 있는데 설치 직후 DB 로케이션 입력이 안된다는 점이다. 캘리버가 실행될려면 DB 폴더 아래에 metadata.</description>
    </item>
    
    <item>
      <title>인프런에서 iOS 게임만들기 강의공개를 시작하였습니다</title>
      <link>https://cliearl.github.io/posts/etc/introduce-inflearn/</link>
      <pubDate>Thu, 27 May 2021 07:32:39 +0900</pubDate>
      
      <guid>https://cliearl.github.io/posts/etc/introduce-inflearn/</guid>
      <description>안녕하세요 냉동코더입니다. 그간 개인사정으로 공개를 중지하고 있었던 iOS 게임제작강의를 다시 공개합니다.
재공개되는 강의는 Swift로 iOS 2D 아케이드 게임 만들기. 그리고 Swift 5와 SpriteKit으로 만들어보는 아이폰 iOS 2D 슈팅게임입니다.
Swift로 iOS 2D 아케이드 게임 만들기 강의는 플래피버드 게임을 만들어보는 강의인데요, 공개를 중지하던 중에도 계속 공개문의가 있던 강의라 다시 공개할 수 있게 되어 기쁜 마음입니다.
Swift 5와 SpriteKit으로 만들어보는 아이폰 iOS 2D 슈팅게임은 무한히 반복되는 종스크롤 슈팅게임을 만드는 강의입니다.
그리고 SpriteKit과 GameplayKit으로 만드는 인공지능 술래잡기 게임을 새롭게 공개합니다.</description>
    </item>
    
    <item>
      <title>Assets 폴더에서 로딩한 json 파일 Recyclerview에 표시하기</title>
      <link>https://cliearl.github.io/posts/android/assets-json-recycler/</link>
      <pubDate>Wed, 05 May 2021 23:05:14 +0900</pubDate>
      
      <guid>https://cliearl.github.io/posts/android/assets-json-recycler/</guid>
      <description>&lt;p&gt;이번 포스팅에서는 Assets 폴더를 사용하는 법에 대해 알아보겠습니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ViewPager2와 TabLayout을 이용해 스와이프 되는 화면 구현하기</title>
      <link>https://cliearl.github.io/posts/android/viewpager2-tablayout/</link>
      <pubDate>Sun, 02 May 2021 22:44:04 +0900</pubDate>
      
      <guid>https://cliearl.github.io/posts/android/viewpager2-tablayout/</guid>
      <description>이번 포스팅에서는 ViewPager2와 TabLayout을 이용한 디자인을 구현해 보도록 하겠습니다.
ViewPager2를 사용하는 이유나 장점에 대해서는 ViewPager1 프로젝트를 ViewPager2 프로젝트로 변환하기 포스팅에서 다루었으니 그 내용을 참조해 주시기 바랍니다.
플러그인 추가 우선은 뷰바인딩 사용설정 및 ViewPager2 플러그인을 추가합니다.
// 뷰바인딩 사용준비 android { buildFeatures.viewBinding true } // 뷰페이저2 라이브러리 추가 dependencies { implementation &amp;#39;androidx.viewpager2:viewpager2:1.0.0&amp;#39; } Fragment의 레이아웃 작성 다음은 new -&amp;gt; fragment 를 선택하여 테스트용으로 사용할 프래그먼트를 만들어줍니다. 텍스트를 화면 중간에 표시하기 위해 코드를 약간 변경합니다.</description>
    </item>
    
    <item>
      <title>스플래쉬 스크린 설정하기</title>
      <link>https://cliearl.github.io/posts/android/splashscreen/</link>
      <pubDate>Wed, 28 Apr 2021 21:46:44 +0900</pubDate>
      
      <guid>https://cliearl.github.io/posts/android/splashscreen/</guid>
      <description>&lt;p&gt;이번 포스팅에서는 스플래시 스크린을 만드는 법에 대해 알아보도록 하겠습니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>App Icon 설정하기</title>
      <link>https://cliearl.github.io/posts/android/appicon/</link>
      <pubDate>Wed, 28 Apr 2021 21:46:35 +0900</pubDate>
      
      <guid>https://cliearl.github.io/posts/android/appicon/</guid>
      <description>&lt;p&gt;이번 포스팅에서는 앱에 아이콘을 설정하는 방법에 대해 알아보도록 하겠습니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ProgressBar로 AsyncTask 이해하기</title>
      <link>https://cliearl.github.io/posts/android/progressbar-asynctask/</link>
      <pubDate>Sun, 25 Apr 2021 15:35:18 +0900</pubDate>
      
      <guid>https://cliearl.github.io/posts/android/progressbar-asynctask/</guid>
      <description>&lt;p&gt;이번 포스팅에서는 ProgressBar와 AsyncTask의 사용방법에 대해 알아보도록 하겠습니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Google Admob으로 보상형 광고 표시하기 </title>
      <link>https://cliearl.github.io/posts/android/gadmob-rewarded/</link>
      <pubDate>Sat, 24 Apr 2021 21:48:55 +0900</pubDate>
      
      <guid>https://cliearl.github.io/posts/android/gadmob-rewarded/</guid>
      <description>&lt;p&gt;이번 포스팅에서는 보상형 광고를 표시하는 법에 대해 알아보도록 하겠습니다. 보상형 광고란 광고를 본 댓가로 어떤 아이템이나 보상을 주는 형태의 광고를 말합니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Google Admob으로 전면광고 표시하기</title>
      <link>https://cliearl.github.io/posts/android/gadmob-interstitial/</link>
      <pubDate>Thu, 22 Apr 2021 20:36:18 +0900</pubDate>
      
      <guid>https://cliearl.github.io/posts/android/gadmob-interstitial/</guid>
      <description>&lt;p&gt;이번 포스팅에서는 구글 애드몹을 이용해서 전면광고를 표시하는 법에 대해 알아보도록 하겠습니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>SharedPreferences를 json 포맷으로 관리하기</title>
      <link>https://cliearl.github.io/posts/android/sharedpreferneces-gson/</link>
      <pubDate>Thu, 22 Apr 2021 20:33:39 +0900</pubDate>
      
      <guid>https://cliearl.github.io/posts/android/sharedpreferneces-gson/</guid>
      <description>&lt;p&gt;이번 포스팅에서는 SharedPreferences에 복잡한 형태의 데이터를 json 포맷으로 저장하고 불러오는 법에 대해 알아보도록 하겠습니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Google Admob으로 배너광고 표시하기</title>
      <link>https://cliearl.github.io/posts/android/gadmob-banner/</link>
      <pubDate>Wed, 21 Apr 2021 22:17:58 +0900</pubDate>
      
      <guid>https://cliearl.github.io/posts/android/gadmob-banner/</guid>
      <description>&lt;p&gt;이번 포스팅에서는 구글 애드몹 라이브러리를 이용해서 앱에 배너광고를 표시하는 법에 대해 알아보도록 하겠습니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>SharedPreferences로 앱 설정값 저장하고 불러오기</title>
      <link>https://cliearl.github.io/posts/android/sharedpreferences-basic/</link>
      <pubDate>Tue, 20 Apr 2021 21:35:43 +0900</pubDate>
      
      <guid>https://cliearl.github.io/posts/android/sharedpreferences-basic/</guid>
      <description>&lt;p&gt;이번 포스팅에서는 SharedPreferences를 사용하는 법에 대해 알아보도록 하겠습니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>RecyclerView를 Swipe, Drag, Touch하기</title>
      <link>https://cliearl.github.io/posts/android/recyclerview-touch/</link>
      <pubDate>Sun, 18 Apr 2021 22:40:04 +0900</pubDate>
      
      <guid>https://cliearl.github.io/posts/android/recyclerview-touch/</guid>
      <description>&lt;p&gt;이번 포스팅에서는 RecyclerView에 Swipe, Drag, Touch 동작을 연결하는 법에 대해 알아보도록 하겠습니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>앱에서 RecyclerView 사용하기</title>
      <link>https://cliearl.github.io/posts/android/recyclerview-implement/</link>
      <pubDate>Sat, 17 Apr 2021 22:43:43 +0900</pubDate>
      
      <guid>https://cliearl.github.io/posts/android/recyclerview-implement/</guid>
      <description>&lt;p&gt;이번 포스팅에서는 리사이클러뷰를 사용하는 법에 대해 알아보도록 하겠습니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>RecyclerView에 View Binding 적용하기</title>
      <link>https://cliearl.github.io/posts/android/viewbinding-recyclerview/</link>
      <pubDate>Sat, 17 Apr 2021 22:43:04 +0900</pubDate>
      
      <guid>https://cliearl.github.io/posts/android/viewbinding-recyclerview/</guid>
      <description>&lt;p&gt;이번 포스팅에서는 RecyclerView에 View Binding을 적용하는 법에 대해 알아보도록 하겠습니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ViewPager1 프로젝트를 ViewPager2 프로젝트로 변환하기</title>
      <link>https://cliearl.github.io/posts/android/viewpager2-convert/</link>
      <pubDate>Sat, 17 Apr 2021 18:38:59 +0900</pubDate>
      
      <guid>https://cliearl.github.io/posts/android/viewpager2-convert/</guid>
      <description>이번 포스팅에서는 프로젝트 안에 작성된 ViewPager1 모듈을 ViewPager2 모듈로 변환하는 법에 대해 알아보도록 하겠습니다.
안드로이드 라이브러리가 androidx로 바뀌는 과정에서 뷰페이저 라이브러리도 업그레이드 해달라는 요구가 꽤 많았습니다. 그래서 구글에서는 ViewPager2 라이브러리를 개발했습니다.
ViewPager2의 특징 구글에서 설명하는 ViewPager2의 [장점]((https://developer.android.com/training/animation/vp2-migration)은 다음과 같습니다.
 Vertical scrolling : 세로스크롤 Right-to-left support : 페이지를 오른쪽에서 왼쪽으로 정렬 modifiable Fragment collenctions : 프래그먼트의 변화를 동적으로 반영 가능 DiffUtil : 리사이클러뷰의 DiffUtil을 사용 가능 ViewPager1 라이브러리는 더이상 관리되지 않음  ViewPager2로 변환 기존에 작성했던 ViewPager1 프로젝트를 변환하는 방법으로 보여드리도록 하겠습니다.</description>
    </item>
    
    <item>
      <title>ViewPager를 써서 좌우로 스와이프되는 화면 만들기</title>
      <link>https://cliearl.github.io/posts/android/viewpager-swipe/</link>
      <pubDate>Sat, 17 Apr 2021 18:38:46 +0900</pubDate>
      
      <guid>https://cliearl.github.io/posts/android/viewpager-swipe/</guid>
      <description>&lt;p&gt;이번 포스팅에서는 &lt;a class=&#34;link&#34; href=&#34;https://developer.android.com/guide/navigation/navigation-swipe-view&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;ViewPager&lt;/a&gt;를 써서 화면을 좌우로 스와이프할 수 있는 앱을 만들어 보겠습니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>findViewById 대신 View Binding 사용하기</title>
      <link>https://cliearl.github.io/posts/android/apply-viewbinding/</link>
      <pubDate>Sat, 17 Apr 2021 18:38:23 +0900</pubDate>
      
      <guid>https://cliearl.github.io/posts/android/apply-viewbinding/</guid>
      <description>&lt;p&gt;이번 포스팅에서는 View Binding을 사용하는 법에 대해 알아보도록 하겠습니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>앱에서 타이틀바, 상태바 감추기</title>
      <link>https://cliearl.github.io/posts/android/hide-titlebar/</link>
      <pubDate>Fri, 16 Apr 2021 20:05:22 +0900</pubDate>
      
      <guid>https://cliearl.github.io/posts/android/hide-titlebar/</guid>
      <description>&lt;p&gt;이번 포스팅에서는 앱에 표시되는 타이틀바와 상태바를 감추는 법에 대해 알아보도록 하겠습니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>안드로이드 앱에서 음악 재생하기</title>
      <link>https://cliearl.github.io/posts/android/use-mediaplayer/</link>
      <pubDate>Thu, 15 Apr 2021 18:37:51 +0900</pubDate>
      
      <guid>https://cliearl.github.io/posts/android/use-mediaplayer/</guid>
      <description>&lt;p&gt;이번 포스팅에서는 앱에서 음악을 재생하는 방법에 대해 알아보도록 하겠습니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>앱 빌드속도 빠르게 하기</title>
      <link>https://cliearl.github.io/posts/android/fast-build/</link>
      <pubDate>Mon, 12 Apr 2021 19:35:46 +0900</pubDate>
      
      <guid>https://cliearl.github.io/posts/android/fast-build/</guid>
      <description>&lt;p&gt;이번 포스팅에서는 안드로이드 스튜디오에서 앱의 빌드속도를 빠르게 할 수 있는 여러가지 설정들에 대해 알아보도록 하겠습니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Glide로 앱에서 움직이는 GIF 표시하기</title>
      <link>https://cliearl.github.io/posts/android/imageplugin-glide/</link>
      <pubDate>Thu, 08 Apr 2021 20:40:50 +0900</pubDate>
      
      <guid>https://cliearl.github.io/posts/android/imageplugin-glide/</guid>
      <description>&lt;p&gt;이번 포스팅에서는 앱에서 움직이는 GIF를 표시하는 법에 대해 알아보도록 하겠습니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Date and Time 다루기</title>
      <link>https://cliearl.github.io/posts/android/date-and-time/</link>
      <pubDate>Wed, 07 Apr 2021 20:32:54 +0900</pubDate>
      
      <guid>https://cliearl.github.io/posts/android/date-and-time/</guid>
      <description>&lt;p&gt;이번 포스팅에서는 날짜와 시간을 다루는 법에 대해 알아보도록 하겠습니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Data class 이해하고 RecyclerView에서 사용하기</title>
      <link>https://cliearl.github.io/posts/android/dataclass-recyclerview/</link>
      <pubDate>Tue, 06 Apr 2021 21:34:00 +0900</pubDate>
      
      <guid>https://cliearl.github.io/posts/android/dataclass-recyclerview/</guid>
      <description>&lt;p&gt;이번 포스팅에서는 Data class를 사용하는 법에 대해 알아보도록 하겠습니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>프로젝트의 빌드넘버 자동증가 시키기</title>
      <link>https://cliearl.github.io/posts/android/autoset-buildnumber/</link>
      <pubDate>Tue, 06 Apr 2021 19:24:59 +0900</pubDate>
      
      <guid>https://cliearl.github.io/posts/android/autoset-buildnumber/</guid>
      <description>&lt;p&gt;이번 포스팅에서는 프로젝트의 빌드넘버를 자동으로 증가시키는 법에 대해 알아보도록 하겠습니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ProgressDialog로 Thread와 Handler 이해하기</title>
      <link>https://cliearl.github.io/posts/android/progressdialog-thread/</link>
      <pubDate>Mon, 05 Apr 2021 22:20:49 +0900</pubDate>
      
      <guid>https://cliearl.github.io/posts/android/progressdialog-thread/</guid>
      <description>이번 포스팅에서는 ProgressDialog와 Thread 사용법에 대해 알아보도록 하겠습니다.
ProgressDialog란 ProgressDialog는 안드로이드가 어떤 작업을 진행할때 그 작업의 진행상황과 부가적인 문장을 팝업창으로 보여주는 모듈입니다. 시간이 걸리는 파일 다운로드나 복사를 수행할 때 이런창을 띄워주면 기다리는데 유저의 거부감을 줄일 수 있습니다.
 
ProgressDialog는 다이얼로그가 표시되는 동안 유저가 다른 조작을 못하게 된다는 이유로 Android 8.0(API level 26)부터는 deprecated 되고 대신 ProgressBar를 사용하도록 권장하고 있습니다.
&amp;hellip;만, ProgressDialog는 쓰레드를 설명하는데 좋은 예제이기 때문에 여기서는 ProgressDialog를 구현하면서 쓰레드에 대해 이해해 보도록 하겠습니다</description>
    </item>
    
    <item>
      <title>패스워드 매니저 교체기</title>
      <link>https://cliearl.github.io/posts/etc/password-manager/</link>
      <pubDate>Wed, 24 Mar 2021 23:03:54 +0900</pubDate>
      
      <guid>https://cliearl.github.io/posts/etc/password-manager/</guid>
      <description>패스워드 매니저는 웹브라우저에서 아이디와 패스워드를 자동으로 넣어주는 프로그램입니다.
들어가기 저는 패스워드 매니저로 LastPass를 사용하고 있었습니다. 과거에 해킹당한 적도 있었지만 그 이후 큰 이슈가 없었고 사용하기 편해서 계속 사용하고 있었습니다.
크롬, 파이어폭스, 사파리, 엣지, 오페라 등의 여러 브라우저에서 작동하며 안드로이드, iOS, 윈도우, 맥을 지원하고 터치ID도 대응하기 때문에 여러 장치사이에서 동기화하며 잘 사용하고 있었습니다&amp;hellip;만 LastPass의 무료이용자에 대한 정책이 2021년 3월 16일부터 변경 되었습니다.
그 내용은 컴퓨터 혹은 모바일 기기 둘 중 하나에서만 자유롭게 사용하게 할 것이고 양쪽 모두에서 사용하고 싶다면 한달에 3달러인 프리미엄 플랜에 가입해야 한다는 것 입니다.</description>
    </item>
    
    <item>
      <title>녹음용 마이크 교체기</title>
      <link>https://cliearl.github.io/posts/etc/changemic/</link>
      <pubDate>Mon, 22 Mar 2021 18:44:42 +0900</pubDate>
      
      <guid>https://cliearl.github.io/posts/etc/changemic/</guid>
      <description>지금까지 사용하던 녹음환경을 개선하였습니다.
들어가기 지금까지는 음성녹음을 위해 애플 이어팟을 맥북에 연결하여 마이크로 사용하고 있었습니다.  이어팟 
핸즈프리인것 치고는 마이크 성능이 나쁘지 않았는데요, 최근 맥북에서 녹음할 때 드라이버 충돌이 있었는지 목욕탕에서 녹음하는것처럼 소리가 울리는 문제가 발생했기에 새로 마이크를 들이기로 했습니다.
컨셉은 20만원대에서 믹서없이 사용할 수 있는 USB 콘덴서마이크였습니다.
검토한 마이크들 NT-USB  이미지 
 https://ko.rode.com/microphones/nt-usb 워낙 평도 좋고 가성비도 좋아서 눈여겨보고있던 마이크였는데 최근에 가격이 좀 올랐습니다.  NT-USB Mini  이미지</description>
    </item>
    
    <item>
      <title>ktlint로 코틀린 코딩 컨벤션 검토하기</title>
      <link>https://cliearl.github.io/posts/android/use-ktlint/</link>
      <pubDate>Sun, 21 Mar 2021 18:07:38 +0900</pubDate>
      
      <guid>https://cliearl.github.io/posts/android/use-ktlint/</guid>
      <description>&lt;p&gt;이번 포스트에서는 작성된 코드의 교열을 보는 방법에 대해 알아보도록 하겠습니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Hexo에서 Hugo로 블로그 엔진 변경</title>
      <link>https://cliearl.github.io/posts/linux/hugo-blog/</link>
      <pubDate>Thu, 04 Mar 2021 22:24:02 +0900</pubDate>
      
      <guid>https://cliearl.github.io/posts/linux/hugo-blog/</guid>
      <description>기술블로그 엔진을 Hugo에서 Hexo로 바꾸어 보았다.
Hexo에 Icarus 태그를 씌우고 도커에 올려서 잘 쓰고 있었는데 내가 사용한 도커 이미지는 업뎃이 안된다는 문제가 있었다. https://github.com/spurin/docker-hexo
그래서 비슷한 엔진인 Hugo를 찾아보았는데 Hugo의 도커 이미지는 관리가 잘 되고 있었다. https://hub.docker.com/r/klakegg/hugo/
근데 이상하게도 이 이미지를 비롯한 모든 hugo의 도커 이미지는 내 시놀로지 환경에서 실행이 안됐다. 짜증나기도 하고 이왕 이렇게 된거 로컬에서 실행하기로 했다. 맥북에서 하면 brew를 사용하기 때문에 업뎃도 쉬워서 관리가 편하다. hexo가 brew로 관리가 안된다는 점도 hugo로 온 이유중에 하나.</description>
    </item>
    
    <item>
      <title>내가 사용하는 Firefox Plugin</title>
      <link>https://cliearl.github.io/posts/etc/firefox-plugin/</link>
      <pubDate>Tue, 02 Feb 2021 02:11:13 +0900</pubDate>
      
      <guid>https://cliearl.github.io/posts/etc/firefox-plugin/</guid>
      <description>내가 사용하는 파이어폭스 플러그인을 정리해 보았다.
Auto Tab Discard https://addons.mozilla.org/ko/firefox/addon/auto-tab-discard/
 안보고 있는 탭을 자동으로 정리해서 메모리 사용량을 줄여줌.  Bitwarden https://addons.mozilla.org/ko/firefox/addon/bitwarden-password-manager/
 패스워드 매니저.  Clear Cache https://addons.mozilla.org/en-US/firefox/addon/clearcache/
 캐시삭제 버튼을 만들어 줌.  Dark Reader https://addons.mozilla.org/ko/firefox/addon/darkreader/
 모든 웹사이트에 다크모드를 적용하여 어둡게 보이도록 함.  Download Filename Encoding https://addons.mozilla.org/ko/firefox/addon/download-filename-encoding/
 다운로드하는 파일명이 언어 인코딩 때문에 깨지는 것을 방지.  Download Manager (S3) https://addons.mozilla.org/ko/firefox/addon/s3download-statusbar/
 다운로드 진행상황을 상태표시줄에 표시해줌.  DownThemAll!</description>
    </item>
    
    <item>
      <title>노트 앱 정착기</title>
      <link>https://cliearl.github.io/posts/etc/finding-note-app/</link>
      <pubDate>Sat, 16 Jan 2021 13:18:57 +0900</pubDate>
      
      <guid>https://cliearl.github.io/posts/etc/finding-note-app/</guid>
      <description>윈도우, Mac, 스마트폰에서 모두 사용할 수 있는 메모 앱을 찾아봤다. 마크다운 포맷을 사용할 수 있으면서 메모를 디렉토리로 관리할 수 있을 것이 조건이었다.
스탠드얼론 앱 iOS 메모 앱 https://support.apple.com/ko-kr/HT205773
아이폰을 사용하고 있기에 처음에는 아이폰의 메모 앱을 사용해 봤으나 별 기능도 없고 아이클라우드환경은 윈도우 환경에서 싱크할 수가 없다는 한계가 있었다.
Google Keep https://apps.apple.com/us/app/google-keep-notes-and-lists/id1029207872
구글 생태계에서 사용할 수 있는 메모 앱. 워드프로세서로 사용하는 느낌이 아닌 포스트잇 같은 느낌으로 사용한다. 개인적 용도와는 맞지않아서 패스함.</description>
    </item>
    
    <item>
      <title>내가 사용하는 VS Code settings.json</title>
      <link>https://cliearl.github.io/posts/etc/vscode-settings-json/</link>
      <pubDate>Mon, 14 Dec 2020 15:21:53 +0900</pubDate>
      
      <guid>https://cliearl.github.io/posts/etc/vscode-settings-json/</guid>
      <description>내가 사용하는 VS Code의 settings.json 내용
{ &amp;#34;files.autoSave&amp;#34;: &amp;#34;afterDelay&amp;#34;, &amp;#34;editor.fontSize&amp;#34;: 18, &amp;#34;editor.fontFamily&amp;#34;: &amp;#34;&amp;#39;Fira Code&amp;#39;, &amp;#39;Noto Sans CJK KR&amp;#39;&amp;#34;, &amp;#34;editor.fontLigatures&amp;#34;: false, &amp;#34;editor.renderWhitespace&amp;#34;: &amp;#34;boundary&amp;#34;, &amp;#34;editor.wordWrap&amp;#34;: &amp;#34;on&amp;#34;, &amp;#34;editor.wrappingIndent&amp;#34;: &amp;#34;indent&amp;#34;, &amp;#34;editor.rulers&amp;#34;: [ 100, 120 ], &amp;#34;editor.formatOnSave&amp;#34;: true, &amp;#34;git.autofetch&amp;#34;: true, &amp;#34;git.confirmSync&amp;#34;: false, &amp;#34;git.postCommitCommand&amp;#34;: &amp;#34;none&amp;#34;, &amp;#34;python.formatting.provider&amp;#34;: &amp;#34;black&amp;#34;, &amp;#34;python.languageServer&amp;#34;: &amp;#34;Microsoft&amp;#34;, &amp;#34;python.linting.pylintEnabled&amp;#34;: false, &amp;#34;python.linting.pylintPath&amp;#34;: &amp;#34;pylint&amp;#34;, &amp;#34;terminal.integrated.shell.windows&amp;#34;: &amp;#34;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\powershell.exe&amp;#34;, &amp;#34;code-runner.runInTerminal&amp;#34;: true, &amp;#34;code-runner.executorMap&amp;#34;: { &amp;#34;javascript&amp;#34;: &amp;#34;node&amp;#34;, &amp;#34;php&amp;#34;: &amp;#34;php&amp;#34;, &amp;#34;python&amp;#34;: &amp;#34;$pythonPath -u $fullFileName&amp;#34;, &amp;#34;perl&amp;#34;: &amp;#34;perl&amp;#34;, &amp;#34;ruby&amp;#34;: &amp;#34;ruby&amp;#34;, &amp;#34;go&amp;#34;: &amp;#34;go run&amp;#34;, &amp;#34;html&amp;#34;: &amp;#34;\&amp;#34;C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.</description>
    </item>
    
    <item>
      <title>VSCODE에서 Python VirtualEnv 환경설정하기</title>
      <link>https://cliearl.github.io/posts/etc/python-virtualenv-settings/</link>
      <pubDate>Sun, 13 Dec 2020 15:37:00 +0900</pubDate>
      
      <guid>https://cliearl.github.io/posts/etc/python-virtualenv-settings/</guid>
      <description>VS Code에 파이썬 가상환경 설정하고 사용하는 법에 대해 정리했다.
venv 환경 작성  작업폴더를 연 뒤 터미널에서 다음 값 입력  $ python3 -m venv .venv   상태표시줄의 파이썬을 눌러 (&#39;.venv&#39;)인 python을 선택
  다음 명령어로 가상환경을 활성화 후 패키지 설치
  //윈도우 .venv\\scripts\\activate // macOS source .venv/bin/activate code-runner를 실행하기 위한 settings.json 설정 // 윈도우 &amp;#34;python.pythonPath&amp;#34;: &amp;#34;blahblah\\.venv\\Script\\python.exe&amp;#34;, // macOS &amp;#34;python.pythonPath&amp;#34;: &amp;#34;.venv/bin/python&amp;#34;, </description>
    </item>
    
    <item>
      <title>Synology에서 Docker Image 업데이트하기</title>
      <link>https://cliearl.github.io/posts/linux/synology-docker-update/</link>
      <pubDate>Mon, 23 Nov 2020 02:55:00 +0900</pubDate>
      
      <guid>https://cliearl.github.io/posts/linux/synology-docker-update/</guid>
      <description>시놀로지에서 도커 이미지를 업데이트하는 법에 대해 정리하였다.
  도커패널 &amp;gt; 컨테이너 &amp;gt; 업데이트할 컨테이너 선택후 [작업 -&amp;gt; 중지]
  도커패널 &amp;gt; 레지스트리 &amp;gt; 업데이트할 이미지 찾아서 [다운로드]
(이전 다운로드 받은 이미지(image) 삭제 하지 않아도 됨)
  도커패널 &amp;gt; 업데이트할 컨테이너 선택후 [작업 -&amp;gt; 지우기]
(이전 설정은 지워지지 않음)
  도커패널 &amp;gt; 업데이트할 컨테이너 선택후 [작업 -&amp;gt; 시작점]
  </description>
    </item>
    
    <item>
      <title>내가 사용하는 VS Code Extensions</title>
      <link>https://cliearl.github.io/posts/etc/vscode-extensions/</link>
      <pubDate>Tue, 20 Oct 2020 05:27:00 +0900</pubDate>
      
      <guid>https://cliearl.github.io/posts/etc/vscode-extensions/</guid>
      <description>내가 사용하는 VS Code의 extension에 대해 정리해보았다.
Active File In StatusBar  https://marketplace.visualstudio.com/items?itemName=RoscoP.ActiveFileInStatusBar 현재 편집하고 있는 파일의 위치를 상태바에 표시.  C/C++  https://marketplace.visualstudio.com/items?itemName=ms-vscode.cpptools C/C++ 지원  Code Runner  https://marketplace.visualstudio.com/items?itemName=formulahendry.code-runner 코드 실행을 도와줌. settings.json에 다음 내용을 추가.  &amp;#34;code-runner.executorMap&amp;#34;: { &amp;#34;javascript&amp;#34;: &amp;#34;node&amp;#34;, &amp;#34;php&amp;#34;: &amp;#34;php&amp;#34;, &amp;#34;python&amp;#34;: &amp;#34;$pythonPath -u $fullFileName&amp;#34;, &amp;#34;perl&amp;#34;: &amp;#34;perl&amp;#34;, &amp;#34;ruby&amp;#34;: &amp;#34;ruby&amp;#34;, &amp;#34;go&amp;#34;: &amp;#34;go run&amp;#34;, &amp;#34;html&amp;#34;: &amp;#34;\&amp;#34;C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe\&amp;#34;&amp;#34;, &amp;#34;java&amp;#34;: &amp;#34;cd $dir &amp;amp;&amp;amp; javac $fileName &amp;amp;&amp;amp; java $fileNameWithoutExt&amp;#34;, &amp;#34;c&amp;#34;: &amp;#34;cd $dir &amp;amp;&amp;amp; gcc $fileName -o $fileNameWithoutExt &amp;amp;&amp;amp; $dir$fileNameWithoutExt&amp;#34;, &amp;#34;cpp&amp;#34;: &amp;#34;cd $dir &amp;amp;&amp;amp; g++ -std=c++14 $fileName -o $fileNameWithoutExt &amp;amp;&amp;amp; $dir$fileNameWithoutExt&amp;#34; }, CodeMap  https://marketplace.</description>
    </item>
    
    <item>
      <title>도커로 Hexo 블로그 만들고 github.io 주소로 접속하기</title>
      <link>https://cliearl.github.io/posts/linux/docker-hexo-blog/</link>
      <pubDate>Fri, 09 Oct 2020 19:24:00 +0900</pubDate>
      
      <guid>https://cliearl.github.io/posts/linux/docker-hexo-blog/</guid>
      <description>도커로 Hexo 블로그를 만들고 github.io 주소로 접속하도록 해 보았다.
개인적으로 사용하고 있는 텍큐 블로그가 있는데 기술관련 내용을 쓰기는 너무 불편하고 오래되기도 해서 마크다운으로 사용할 수 있는 블로그 툴을 찾아봤다.
처음엔 입출력 속도만 개선해보려고 PHP 버전을 5.6에서 7.3으로 올려봤는데 텍큐가 너무 오래되다보니 패치를 해도 잘 안돌아가고 해서 v7로 올리는 건 포기.
그 다음으로는 업뎃 잘되는 워드프레스에 텍스트큐브의 블로그 내용을 다 옮기고 기술내용도 거기서 다 같이 쓸려고 했다. 그래서 TTXML Importer로 데이터를 옮겨봤는데 글만 옮겨지고 그외 카운터 정보같은건 옮길 수가 없었다.</description>
    </item>
    
    <item>
      <title>Synology에 Gogs 설치하기</title>
      <link>https://cliearl.github.io/posts/linux/install-gogs-on-synology/</link>
      <pubDate>Fri, 08 Feb 2019 00:54:25 +0900</pubDate>
      
      <guid>https://cliearl.github.io/posts/linux/install-gogs-on-synology/</guid>
      <description>깃 저장소 관리 서비스 Git repositories 를 관리하는 서비스는 여러가지가 있는데 Github는 프라이빗 저장소에 제한이 있다. Gitlab은 시놀로지에 설치는 되는데 Docker를 지원하는 고가의 기종에서만 가능하다. 도커를 지원하는 시놀로지 모델은 다음과 같다.
 19 시리즈 : RS1619xs+, RS1219+, DS1819+ 18 시리즈 : FS1018, RS3618xs, RS2818RP+, RS2418RP+, RS2418+, RS818RP+, RS818+, DS3018xs, DS1618+, DS918+, DS718+, DS218+ 17 시리즈 : FS3017, FS2017, RS18017xs+, RS4017xs+, RS3617xs+, RS3617RPxs, RS3617xs, DS3617xs, DS1817+, DS1517+ 16 시리즈 : RS18016xs+, RS2416RP+, RS2416+, DS916+, DS716+, DS716+II, DS216+, DS216+II 15 시리즈 : RS815RP+, RS815+, RC18015xs+, DS3615xs, DS2415+, DS1815+, DS1515+, DS415+ 14 시리즈 : RS3614xs+, RS3614RPxs, RS3614xs, RS2414RP+, RS2414+, RS814RP+, RS814+ 13 시리즈 : RS10613xs+, RS3413xs+, DS2413+, DS1813+, DS1513+, DS713+ 12 시리즈 : RS3412RPxs, RS3412xs, RS2212RP+, RS2212+, RS812RP+, RS812+, DS3612xs, DS1812+, DS1512+, DS712+, DS412+ 11 시리즈 : RS3411RPxs, RS3411xs, RS2211RP+, RS2211+, DS3611xs, DS2411+, DS1511+, DS411+, DS411+II 10 시리즈 : RS810RP+, RS810+, DS1010+, DS710+  Gogs 선정 어쨌든 프라이빗 소스를 서비스회사에 맡기고 싶진 않아 개인서버에 git을 설치하고 웹에서 매니징을 할수 있게 해 주는 서비스를 찾아보니 Gogs와 Gogs에서 파생되어 나온 Gitea가 있다.</description>
    </item>
    
  </channel>
</rss>
